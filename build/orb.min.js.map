{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.export.excel","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"Dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","customfunc","ret","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","merged","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFuncName","aggregateFunc","formatFunc","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","fieldAxeconfig","axe","rowSettings","columnSettings","dataSettings","Field","caption","visible","collapsible","collapsed","aggregation","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","isString","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","canMoveFields","dataHeadersLocation","grandTotal","width","height","toolbar","theme","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","map","rows","columns","data","dataFieldsCount","runtimeVisibility","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","fieldConfig","defaultFieldConfig","newAxeSubtotalsState","areSubtotalsVisible","splice","toggleSubtotals","axeFields","newState","toggleGrandtotal","isGrandtotalVisible","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","parent","value","isRoot","isLeaf","getRowIndexes","result","j",6,"uiheaders","uriHeader","docHeader","docFooter","createButtonCell","buttonStyle","buttonTextColor","createButtons","buttons","cellsCountBefore","cellsCountAfter","prefix","str","reduce","tr","toBase64","currTheme","override","themeColor","themes","themeFadeout","fadeoutColor","headerStyle","cellsHorizontalCount","layout","pivotTable","sep","rowHeaders","columnHeaders","currRow","rowStr","header","HeaderType","DATA_HEADER","SUB_TOTAL","hspan","vspan","rowHeadersAndDataCells","dataRow","dataRows","dataCell","index","./orb.ui.header",7,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",8,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","emptyIntersection","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",9,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",10,"states","set","key","state",11,"isBootstrap","currentTheme","red","blue","green","orange","flower","gray","black","white","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","scrollBar","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","title","body","hexToRgb","hex","exec","parseInt","g","rgbaToHex","rgba","matches","match","alpah","parseFloat","applyAlphaAndToHex","alpha","floor","substr","color",12,"axeModel","isMultiDataFields","toggleFieldExpansion","hIndex","toToggle","allExpanded","expanded","collapse","expand",13,"axeUi","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","infos","currparent","prevpar","grandpar","prevgrandpar","leafIndex","datafieldindex","dataHeader","getUiInfo","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.axe",14,"CellBase","template","cssclass","isvisible","getState","setState","EMPTY","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","ignoreVisibility","subSpan","tspan","addone","isRowsAxe","subheaders","subheader","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",15,"uirows","uicols","buildUi","createVisibleFunc","rowvisible","colvisible","rowsHeaders","columnsLeafHeaders","arr","rowHeadersRow","rowLeafHeader","colHeaderIndex","columnLeafHeader","renderElement","oldAxeType","newAxeType","changeTheme","render","element","drilldown","./orb.ui.cols","./orb.ui.rows",16,"rowsAxe","addDataHeaders","lastInfosArray","dimension","infosMaxIndex","valIndex","subTotalHeader","newHeader","grandtotalHeader","lastrow",17,"ns","identifier","parts","split","prop","Object","prototype","apply","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify","object","InvalidCharacterError","message","chars","btoa","input","block","charCode","String","idx","output","charAt","charCodeAt","atob","bs","buffer","bc","fromCharCode"],"mappings":"AAaA,cACE,SAASA,GACP,GAAI,gBAAmBC,UAAW,mBAAsBC,QAAQA,OAAOD,QAAUD,QAC5E,IAAI,kBAAqBG,SAAUA,OAAOC,IAAKD,UAAWH,OAC1D,CACD,GAAIK,EACJ,oBAAsBC,QAASD,EAAIC,OAAS,mBAAsBC,QAASF,EAAIE,OAAS,mBAAsBC,QAASH,EAAIG,MAAOH,EAAEI,IAAMT,MAEhJ,WAEE,MAAO,SAAUA,GAAEU,EAAGC,EAAGC,GACrB,QAASC,GAAEC,EAAGC,GACV,IAAKJ,EAAEG,GAAI,CACP,IAAKJ,EAAEI,GAAI,CACP,GAAIE,GAAsB,kBAAXC,UAAyBA,OACxC,KAAKF,GAAKC,EAAG,MAAOA,GAAEF,GAAG,EACzB,IAAII,EAAG,MAAOA,GAAEJ,GAAG,EACnB,IAAIT,GAAI,GAAIc,OAAM,uBAAyBL,EAAI,IAC/C,MAAMT,GAAEe,KAAO,mBAAoBf,EAEvC,GAAIgB,GAAIV,EAAEG,IACNb,WAEJS,GAAEI,GAAG,GAAGQ,KAAKD,EAAEpB,QAAS,SAASD,GAC7B,GAAIW,GAAID,EAAEI,GAAG,GAAGd,EAChB,OAAOa,GAAEF,EAAIA,EAAIX,IAClBqB,EAAGA,EAAEpB,QAASD,EAAGU,EAAGC,EAAGC,GAE9B,MAAOD,GAAEG,GAAGb,QAGhB,IAAK,GADDiB,GAAsB,kBAAXD,UAAyBA,QAC/BH,EAAI,EAAGA,EAAIF,EAAEW,OAAQT,IAAKD,EAAED,EAAEE,GACvC,OAAOD,KAEPW,GAAI,SAASC,EAASvB,GAElBA,EAAOD,QAAQyB,MAAQD,EAAQ,eAC/BvB,EAAOD,QAAQ0B,MAAQF,EAAQ,eAC/BvB,EAAOD,QAAQ2B,YAAcH,EAAQ,wBACrCvB,EAAOD,QAAQ4B,MAAQJ,EAAQ,eAC/BvB,EAAOD,QAAQ,UAAYwB,EAAQ,wBAGnCK,qBAAsB,EACtBC,cAAe,EACfC,cAAe,EACfC,uBAAwB,GACxBC,cAAe,KAEnBC,GAAI,SAASV,EAASvB,GAgFlB,QAASkC,GAAaC,EAAWC,EAAcC,EAAYC,GACvD,GAAIC,GAAW,EACXC,EAAM,EACNC,GAAwB,QAAjBL,EAAyBC,EAAaD,GAAcf,MAe/D,OAdIoB,GAAM,IACFH,GAAcG,EAAM,GACpBC,EAAoBP,EAAWC,EAAcC,EAAY,SAASM,GAC9DH,GAAOG,IAEXH,GAAOC,EACPC,EAAoBP,EAAWC,EAAcC,EAAY,SAASM,GAC9DJ,IAAaI,EAAMH,IAAQG,EAAMH,KAErCD,GAAuBD,EAAaG,EAAMA,EAAM,GAEhDF,EAAWK,KAGZL,EAGX,QAASG,GAAoBP,EAAWC,EAAcC,EAAYQ,GAC9D,GAAIC,GAAuB,QAAjBV,CAEV,IADAA,EAAeU,EAAMT,EAAaD,EAC9BA,EAAaf,OAAS,EACtB,IAAK,GAAIL,GAAI,EAAGA,EAAIoB,EAAaf,OAAQL,IACrC6B,GAAUC,EAAMV,EAAapB,GAAKqB,EAAWD,EAAapB,KAAKmB,IAxG3E,GAAIY,GAAe/C,EAAOD,SACtBiD,gBAAiB,SAASC,GACtB,MAAIA,GACoB,gBAATA,IAAqBF,EAAaE,GAClCF,EAAaE,GACG,kBAATA,GACPA,EAEAF,EAAaG,IAGjBH,EAAaG,KAG5BC,MAAO,SAAShB,EAAWC,EAAcC,GACrC,MAAwB,QAAjBD,EAAyBC,EAAWhB,OAASe,EAAaf,QAErE6B,IAAK,SAASf,EAAWC,EAAcC,GACnC,GAAIa,GAAM,CAIV,OAHAR,GAAoBP,EAAWC,EAAcC,EAAY,SAASM,GAC9DO,GAAOP,IAEJO,GAEXE,IAAK,SAASjB,EAAWC,EAAcC,GACnC,GAAIe,GAAM,IAMV,OALAV,GAAoBP,EAAWC,EAAcC,EAAY,SAASM,IACnD,MAAPS,GAAqBA,EAANT,KACfS,EAAMT,KAGPS,GAEXC,IAAK,SAASlB,EAAWC,EAAcC,GACnC,GAAIgB,GAAM,IAMV,OALAX,GAAoBP,EAAWC,EAAcC,EAAY,SAASM,IACnD,MAAPU,GAAeV,EAAMU,KACrBA,EAAMV,KAGPU,GAEXb,IAAK,SAASL,EAAWC,EAAcC,GACnC,GAAIG,GAAM,EACNC,GAAwB,QAAjBL,EAAyBC,EAAaD,GAAcf,MAO/D,OANIoB,GAAM,IACNC,EAAoBP,EAAWC,EAAcC,EAAY,SAASM,GAC9DH,GAAOG,IAEXH,GAAOC,GAEJD,GAEXc,KAAM,SAASnB,EAAWC,EAAcC,GACpC,GAAIiB,GACAb,GAAwB,QAAjBL,EAAyBC,EAAaD,GAAcf,MAO/D,OANIoB,GAAM,IACNa,EAAO,EACPZ,EAAoBP,EAAWC,EAAcC,EAAY,SAASM,GAC9DW,GAAQX,KAGTW,GAEXC,MAAO,SAASpB,EAAWC,EAAcC,GACrC,MAAOmB,MAAKC,KAAKvB,EAAaC,EAAWC,EAAcC,GAAY,KAEvEqB,OAAQ,SAASvB,EAAWC,EAAcC,GACtC,MAAOmB,MAAKC,KAAKvB,EAAaC,EAAWC,EAAcC,GAAY,KAEvEsB,MAAO,SAASxB,EAAWC,EAAcC,GACrC,MAAOH,GAAaC,EAAWC,EAAcC,GAAY,IAE7DuB,KAAM,SAASzB,EAAWC,EAAcC,GACpC,MAAOH,GAAaC,EAAWC,EAAcC,GAAY,UAoCrEwB,GAAI,SAAStC,EAASvB,GAElB,GAAIwB,GAAQD,EAAQ,eAChBuC,EAAYvC,EAAQ,mBAEpBwC,GACAC,QAAS,EACTC,KAAM,EACNC,KAAM,EAGVlE,GAAOD,QAAU,SAAS0B,EAAO0C,GAqF7B,QAASC,GAAcC,GACnB,IAAK,GAAIrD,GAAI,EAAGA,EAAIV,EAAKgE,OAAOjD,OAAQL,IACpC,GAAIV,EAAKgE,OAAOtD,GAAGuD,OAASF,EAAME,KAC9B,MAAOvD,EAGf,OAAO,GAIX,QAASwD,KAEL,GAAqC,MAAjClE,EAAKmB,MAAMgD,oBAA8BnE,EAAKoE,gBAAkB,EAAG,CAEnE,GAAIrC,GAAa/B,EAAKmB,MAAMgD,kBAC5B,IAAkB,MAAdpC,GAAsBb,EAAMmD,QAAQtC,IAAeA,EAAWhB,OAAS,EACvE,IAAK,GAAIuD,GAAW,EAAGC,EAAaxC,EAAWhB,OAAmBwD,EAAXD,EAAuBA,IAG1E,IAAK,GAFDE,GAAMzC,EAAWuC,GACjBG,EAAMzE,EAAK0E,KACNC,EAAS,EAAGA,EAAS3E,EAAKoE,gBAAiBO,IAAU,CAC1D,GAAIC,GAAQ5E,EAAKoE,gBAAkBO,EAC/BE,EAAW7E,EAAKgE,OAAOW,GACvBG,EAAWN,EAAIK,EAASZ,MACxBc,EAAaN,EAAIM,UAEQC,UAAzBD,EAAWD,GACXL,EAAMM,EAAWD,IAEjBL,EAAIQ,OAAOC,KAAKJ,GAChBL,EAAM,GAAIjB,KAAY2B,EAAOV,EAAKK,EAAUD,EAAUD,GAAO,EAAOD,GAAU3E,EAAKoE,gBAAkB,GACrGW,EAAWD,GAAYL,EACvBA,EAAIW,cACJpF,EAAKqF,kBAAkBT,GAAOM,KAAKT,IAGvCA,EAAIW,WAAWF,KAAKZ,KAtHxC,GAAItE,GAAOsF,KACPH,EAAQ,CAEC,OAAThE,GAAiC,MAAhBA,EAAMoE,SAGvBD,KAAKnE,MAAQA,EAGbmE,KAAKzB,KAAOA,EAGZyB,KAAKtB,OAAU,WACX,OAAQH,GACJ,IAAKJ,GAAQC,QACT,MAAO1D,GAAKmB,MAAMoE,OAAOC,YAC7B,KAAK/B,GAAQE,KACT,MAAO3D,GAAKmB,MAAMoE,OAAOE,SAC7B,KAAKhC,GAAQG,KACT,MAAO5D,GAAKmB,MAAMoE,OAAOG,UAC7B,SACI,aAKZJ,KAAKlB,gBAAkB,KAGvBkB,KAAKZ,KAAO,KAGZY,KAAKD,kBAAoB,KAEzBC,KAAKK,OAAS,WACV3F,EAAKoE,gBAAkBpE,EAAKgE,OAAOjD,OACnCf,EAAK0E,KAAO,GAAIlB,KAAY2B,EAAO,KAAM,KAAM,KAAMnF,EAAKoE,gBAAkB,GAAG,GAE/EpE,EAAKqF,oBACL,KAAK,GAAIT,GAAQ,EAAGA,GAAS5E,EAAKoE,gBAAiBQ,IAC/C5E,EAAKqF,kBAAkBT,KAI3BV,IAGA,KAAK,GAAIS,GAAS,EAAGA,EAAS3E,EAAKgE,OAAOjD,OAAQ4D,IAAU,CACxD,GAAIiB,GAAS5F,EAAKgE,OAAOW,IACC,QAAtBiB,EAAOC,KAAKC,OAAyC,SAAtBF,EAAOC,KAAKC,QAC3C9F,EAAK6F,KAAKD,GAAQ,KAK9BN,KAAKO,KAAO,SAAS9B,EAAOgC,GACxB,GAAa,MAAThC,EAAe,CACXgC,KAAgB,IAEZhC,EAAM8B,KAAKC,MADU,QAArB/B,EAAM8B,KAAKC,MACQ,MAEA,OAM3B,KAAK,GAFDlB,GAAQ5E,EAAKoE,gBAAkBN,EAAcC,GAC7CiC,EAAUpB,IAAU5E,EAAKoE,iBAAmBpE,EAAK0E,MAAQ1E,EAAKqF,kBAAkBT,EAAQ,GACnFlE,EAAI,EAAGA,EAAIsF,EAAQjF,OAAQL,IAEhC,GAAoC,kBAAzBqD,GAAM8B,KAAKI,WAA0B,CAC5C,GAAIC,GAAMnC,EAAM8B,KAAKI,WAAWnF,KAAKwE,KAAMU,EAAQtF,GAAGuE,OAC1CD,UAARkB,IAAmBF,EAAQtF,GAAGuE,OAASiB,OAE3CF,GAAQtF,GAAGuE,OAAOY,OACO,SAArB9B,EAAM8B,KAAKC,OACXE,EAAQtF,GAAGuE,OAAOkB,cAmD9CzG,EAAOD,QAAQ2G,KAAO3C,IAGtB4C,kBAAmB,EACnB3E,cAAe,KAEnB4E,GAAI,SAASrF,EAASvB,GAQlB,QAAS6G,GAAiBC,EAAUC,EAASC,GACzC,IAAK,GAAIhG,GAAI,EAAGA,EAAI+F,EAAQ1F,OAAQL,IAChC,GAA4B,MAAxB+F,EAAQ/F,GAAG8F,GACX,MAAOC,GAAQ/F,GAAG8F,EAG1B,OAAOE,GAGX,QAASC,KASL,IAAK,GAPDC,IACAH,WACAI,SACAC,aACAC,cAGKrG,EAAI,EAAGA,EAAIsG,UAAUjG,OAAQL,IAAK,CACvC,GAAIuG,GAAWD,UAAUtG,MACzBkG,GAAOH,QAAQvB,KAAK+B,GACpBL,EAAOC,MAAM3B,KAAK+B,EAASpB,UAC3Be,EAAOE,UAAU5B,KAAK+B,EAASC,cAC/BN,EAAOG,UAAU7B,MACbiC,kBAAmBF,EAASE,kBAC5BC,cAAqB,IAAN1G,EAAUuG,EAASG,cAAiBH,EAASG,cAAgBH,EAASG,gBAAkB,KACvGC,WAAkB,IAAN3G,EAAUuG,EAASI,WAAcJ,EAASI,WAAaJ,EAASI,aAAe,OAInG,MAAOT,GAGX,QAASU,GAAYC,EAAYC,EAASC,EAAaC,GAEnD,GAAIC,GACAC,CAEJ,IAAIF,EACA,OAAQF,GACJ,IAAKK,GAAIzB,KAAKzC,KACVgE,EAAYJ,EAAWO,YACvBF,EAAiBF,EAAmBI,WACpC,MACJ,KAAKD,GAAIzB,KAAK1C,QACViE,EAAYJ,EAAWQ,eACvBH,EAAiBF,EAAmBK,cACpC,MACJ,KAAKF,GAAIzB,KAAKxC,KACV+D,EAAYJ,EAAWS,aACvBJ,EAAiBF,EAAmBM,YACpC,MACJ,SACIL,EAAY,KACZC,EAAiB,SAIzBD,GAAY,KACZC,EAAiB,IAGrB,IAAIhB,GAASD,EAAkBc,EAAaG,EAAgBD,EAAWD,EAAoBH,EAE3F,OAAO,IAAIU,IACPhE,KAAMsC,EAAiB,OAAQK,EAAOH,QAAS,IAE/CyB,QAAS3B,EAAiB,UAAWK,EAAOH,QAAS,IAErDZ,MACIC,MAAOS,EAAiB,QAASK,EAAOC,MAAO,MAC/CZ,WAAYM,EAAiB,aAAcK,EAAOC,MAAO,OAE7DK,UACIiB,QAAS5B,EAAiB,UAAWK,EAAOE,WAAW,GACvDsB,YAAa7B,EAAiB,cAAeK,EAAOE,WAAW,GAC/DuB,UAAW9B,EAAiB,YAAaK,EAAOE,WAAW,IAAUP,EAAiB,cAAeK,EAAOE,WAAW,IAG3HK,kBAAmBZ,EAAiB,oBAAqBK,EAAOG,UAAW,OAC3EK,cAAeb,EAAiB,gBAAiBK,EAAOG,UAAWuB,EAAY1F,KAC/EyE,WAAYd,EAAiB,aAAcK,EAAOG,UAAW,QAC9D,GAGP,QAASwB,GAAiBC,GAEtBA,EAAUA,MAEVlD,KAAKmD,YAAsCzD,SAAxBwD,EAAQC,YAA4BD,EAAQC,aAAc,EAC7EnD,KAAKoD,eAA4C1D,SAA3BwD,EAAQE,eAA+BF,EAAQE,gBAAiB,EAG1F,QAASC,GAAeH,EAASI,GAE7B,GAAIC,IACAV,QAASS,KAAgB,GAAO,EAAO5D,OACvCoD,YAAaQ,KAAgB,GAAO,EAAO5D,OAC3CqD,UAAWO,KAAgB,GAAO,EAAQ5D,OAE9CwD,GAAUA,MAEVlD,KAAK6C,QAA8BnD,SAApBwD,EAAQL,QAAwBK,EAAQL,QAAUU,EAASV,QAC1E7C,KAAK8C,YAAsCpD,SAAxBwD,EAAQJ,YAA4BI,EAAQJ,YAAcS,EAAST,YACtF9C,KAAK+C,UAAkCrD,SAAtBwD,EAAQH,UAA0BG,EAAQH,UAAYQ,EAASR,UAGpF,QAASS,GAAWN,GAChBA,EAAUA,MAEVlD,KAAKQ,MAAQ0C,EAAQ1C,MACrBR,KAAKW,WAAauC,EAAQvC,WArH9B,GAAI/E,GAAQD,EAAQ,eAChB4G,EAAM5G,EAAQ,aACdqH,EAAcrH,EAAQ,qBACtB8H,EAAY9H,EAAQ,mBACpB+H,EAAe/H,EAAQ,gBAoHvBgH,EAAQvI,EAAOD,QAAQsE,MAAQ,SAASyE,EAASS,GAkBjD,QAASC,GAAkB7G,GACvB,MAAc,OAAPA,EAAcA,EAAI8G,WAAa,GAjB1CX,EAAUA,MAGVlD,KAAKrB,KAAOuE,EAAQvE,KAGpBqB,KAAK4C,QAAUM,EAAQN,SAAW5C,KAAKrB,KAGvCqB,KAAKO,KAAO,GAAIiD,GAAWN,EAAQ3C,MACnCP,KAAK4B,SAAW,GAAIyB,GAAeH,EAAQtB,SAG3C,IAAIkC,GACAC,CAMJ/D,MAAK8B,cAAgB,SAASzE,GAC1B,MAAIA,QACAyG,EAAiBd,EAAY5F,gBAAgBC,IAEtCyG,GAIf9D,KAAK+B,WAAa,SAAS1E,GACvB,MAAIA,QACA0G,EAAc1G,GAEP0G,GAIf/D,KAAK6B,kBAAoBqB,EAAQrB,oBAC5BqB,EAAQpB,cACJlG,EAAMoI,SAASd,EAAQpB,eACpBoB,EAAQpB,cACR,SACJ,MAER9B,KAAK8B,cAAcoB,EAAQpB,eAC3B9B,KAAK+B,WAAWmB,EAAQnB,YAAc6B,GAElCD,KAAqB,KACpB3D,KAAKwC,YAAc,GAAIG,GAAMO,EAAQV,aAAa,IAAQ7D,KAAOqB,KAAKrB,MACtEqB,KAAKyC,eAAiB,GAAIE,GAAMO,EAAQT,gBAAgB,IAAQ9D,KAAOqB,KAAKrB,MAC5EqB,KAAK0C,aAAe,GAAIC,GAAMO,EAAQR,cAAc,IAAQ/D,KAAOqB,KAAKrB,MAIjFvE,GAAOD,QAAQ8F,OAAS,SAASA,GA+C7B,QAASgE,GAAkBC,GACvB,MAAmB,gBAARA,IAEHvF,KAAMjE,EAAKyJ,cAAcD,IAG1BA,EA2BX,QAASE,GAASC,EAAWC,GACzB,GAAIC,GAAa/F,EAAc6F,EAAWC,EAC1C,OAAIC,GAAa,GACNF,EAAUE,GAEd,KAGX,QAAS/F,GAAc6F,EAAWC,GAC9B,IAAK,GAAIE,GAAK,EAAGA,EAAKH,EAAU5I,OAAQ+I,IACpC,GAAIH,EAAUG,GAAI7F,OAAS2F,EACvB,MAAOE,EAGf,OAAO,GA5FX,GAAI9J,GAAOsF,IAEXA,MAAKyE,WAAaxE,EAAOwE,eACzBzE,KAAK0E,cAAyChF,SAAzBO,EAAOyE,gBAAgCzE,EAAOyE,eAAgB,EACnF1E,KAAK2E,oBAAqD,YAA/B1E,EAAO0E,oBAAoC,UAAY,OAClF3E,KAAK4E,WAAa,GAAI3B,GAAiBhD,EAAO2E,YAC9C5E,KAAK4B,SAAW,GAAIyB,GAAepD,EAAO2B,UAAU,GACpD5B,KAAK6E,MAAQ5E,EAAO4E,MACpB7E,KAAK8E,OAAS7E,EAAO6E,OACrB9E,KAAK+E,QAAU9E,EAAO8E,QACtB/E,KAAKgF,MAAQtB,EAEbA,EAAauB,QAAQhF,EAAO+E,OAE5BhF,KAAKwC,YAAc,GAAIG,GAAM1C,EAAOuC,aAAa,GACjDxC,KAAKyC,eAAiB,GAAIE,GAAM1C,EAAOwC,gBAAgB,GACvDzC,KAAK0C,aAAe,GAAIC,GAAM1C,EAAOyC,cAAc,GAGnD1C,KAAKkF,wBAELlF,KAAKmF,2BAELnF,KAAKmE,cAAgB,SAASvB,GAC1B,GAAIwC,GAAgB1K,EAAKyK,wBAAwBE,QAAQzC,EACzD,OAAOwC,IAAiB,EAAI1K,EAAKwK,qBAAqBE,GAAiBxC,GAG3E5C,KAAKsF,cAAgB,SAAS3G,GAC1B,GAAI4G,GAAa7K,EAAKwK,qBAAqBG,QAAQ1G,EACnD,OAAO4G,IAAc,EAAI7K,EAAKyK,wBAAwBI,GAAc5G,GAGxEqB,KAAKwF,SAAW,SAASC,GACrB,MAAO/K,GAAKsK,MAAMC,YAAcvK,EAAKsK,MAAMC,QAAQQ,IAGvDzF,KAAK0F,WAAazF,EAAOvB,YAAciH,IAAI,SAASxD,GAChD,GAAI5H,GAAI,GAAIoI,GAAMR,EAIlB,OAFAzH,GAAKwK,qBAAqBtF,KAAKrF,EAAEoE,MACjCjE,EAAKyK,wBAAwBvF,KAAKrF,EAAEqI,SAC7BrI,IAYXyF,KAAKG,WAAaF,EAAO2F,UAAYD,IAAI,SAASxD,GAE9C,MADAA,GAAc8B,EAAkB9B,GACzBH,EAAYtH,EAAM6H,EAAIzB,KAAKzC,KAAM8D,EAAaiC,EAAS1J,EAAKgL,UAAWvD,EAAYxD,SAG9FqB,KAAKE,cAAgBD,EAAO4F,aAAeF,IAAI,SAASxD,GAEpD,MADAA,GAAc8B,EAAkB9B,GACzBH,EAAYtH,EAAM6H,EAAIzB,KAAK1C,QAAS+D,EAAaiC,EAAS1J,EAAKgL,UAAWvD,EAAYxD,SAGjGqB,KAAKI,YAAcH,EAAO6F,UAAYH,IAAI,SAASxD,GAE/C,MADAA,GAAc8B,EAAkB9B,GACzBH,EAAYtH,EAAM6H,EAAIzB,KAAKxC,KAAM6D,EAAaiC,EAAS1J,EAAKgL,UAAWvD,EAAYxD,SAG9FqB,KAAK+F,gBAAkB/F,KAAKI,WAAcJ,KAAKI,WAAW3E,QAAU,EAAK,CAEzE,IAAIuK,IACAxE,WACIoE,KAA4ClG,SAAtChF,EAAK8H,YAAYZ,SAASiB,QAAwBnI,EAAK8H,YAAYZ,SAASiB,SAAU,EAC5FgD,QAAkDnG,SAAzChF,EAAK+H,eAAeb,SAASiB,QAAwBnI,EAAK+H,eAAeb,SAASiB,SAAU,GAqB7G7C,MAAKiG,SAAW,SAAS3B,GACrB,MAAOF,GAAS1J,EAAKgL,UAAWpB,IAGpCtE,KAAKkG,YAAc,SAAS5B,GACxB,MAAOF,GAAS1J,EAAKyF,UAAWmE,IAGpCtE,KAAKmG,eAAiB,SAAS7B,GAC3B,MAAOF,GAAS1J,EAAKwF,aAAcoE,IAGvCtE,KAAKoG,aAAe,SAAS9B,GACzB,MAAOF,GAAS1J,EAAK0F,WAAYkE,IAGrCtE,KAAKqG,gBAAkB,WACnB,MAAO3L,GAAKgL,UAAUY,OAAO,SAAS7H,GAClC,GAAI8H,GAAgB,SAASC,GACzB,MAAO/H,GAAME,OAAS6H,EAAW7H,KAGrC,OAAOjE,GAAK0F,WAAWqG,MAAMF,IACzB7L,EAAKyF,UAAUsG,MAAMF,IACrB7L,EAAKwF,aAAauG,MAAMF,MAIpCvG,KAAK0G,2BAA6B,WAC9B,GAAIC,EACJ,IAAIjM,EAAK+J,aAAekC,EAAOjM,EAAK+J,WAAW,IAAK,CAGhD,IAAK,GAFDmC,GAAahL,EAAMiL,cAAcF,GACjCG,KACK1L,EAAI,EAAGA,EAAIwL,EAAWnL,OAAQL,IACnC0L,EAAQlH,KAAKlF,EAAK4K,cAAcsB,EAAWxL,IAE/C,OAAO0L,GAEX,MAAO,OAGX9G,KAAK+G,cAAgB,WACjB,GAAIC,KAeJ,OAdI/G,GAAOgH,YACPrL,EAAMiL,cAAc5G,EAAOgH,YAAYC,QAAQ,SAASC,GACpD,GAAIC,GAAkBnH,EAAOgH,WAAWE,EACxC,IAAIvL,EAAMmD,QAAQqI,GACdJ,EAAWtM,EAAKyJ,cAAcgD,IAAkB,GAAI1D,GAAU4D,iBAAiB,KAAM,KAAMD,GAAiB,OACzG,CACH,GAAIE,GAAS1L,EAAMiL,cAAcO,GAAiB,EAC9CE,KACAN,EAAWtM,EAAKyJ,cAAcgD,IAAkB,GAAI1D,GAAU4D,iBAAiBC,EAAQF,EAAgBE,QAMhHN,GAGXhH,KAAKuH,UAAY,SAASjD,EAAWkD,EAAYC,EAAYC,GAEzD,GAAIC,GAAQC,EACRC,EACAC,EACAC,EAAqB3D,EAAS1J,EAAKgL,UAAWpB,EAElD,IAAIyD,EAAoB,CAEpB,OAAQP,GACJ,IAAKjF,GAAIzB,KAAKzC,KACVsJ,EAASjN,EAAKyF,SACd,MACJ,KAAKoC,GAAIzB,KAAK1C,QACVuJ,EAASjN,EAAKwF,YACd,MACJ,KAAKqC,GAAIzB,KAAKxC,KACVqJ,EAASjN,EAAK0F,WAMtB,OAAQqH,GACJ,IAAKlF,GAAIzB,KAAKzC,KACVwJ,EAASnN,EAAKyF,UACd2H,EAAcpN,EAAKwL,YAAY5B,EAC/B,MACJ,KAAK/B,GAAIzB,KAAK1C,QACVyJ,EAASnN,EAAKwF,aACd4H,EAAcpN,EAAKyL,eAAe7B,EAClC,MACJ,KAAK/B,GAAIzB,KAAKxC,KACVuJ,EAASnN,EAAK0F,WACd0H,EAAcpN,EAAK0L,aAAa9B,GAMxC,GAAIqD,GAAUE,EAAQ,CAElB,GAAIG,GAAuBtN,EAAKuN,oBAAoBR,EAEpD,IAAIE,EAAQ,CAER,GADAC,EAAcpJ,EAAcmJ,EAAQrD,GAChCkD,IAAeC,IACXG,GAAeD,EAAOlM,OAAS,GACnB,MAAZiM,GACAE,IAAgBF,EAAW,GAC3B,OAAO,CAGfC,GAAOO,OAAON,EAAa,GAG/B,GAAInJ,GAAQuD,EACRtH,EACA+M,EACAK,EACAC,EAiBJ,OAfKC,IAAwBvJ,EAAMmD,SAASiB,WAAY,IACpDpE,EAAMmD,SAASiB,QAAU,MAGzBgF,IACgB,MAAZH,EACAG,EAAOK,OAAOR,EAAU,EAAGjJ,GAE3BoJ,EAAOjI,KAAKnB,IAKpB/D,EAAKqL,gBAAkBrL,EAAK0F,WAAc1F,EAAK0F,WAAW3E,QAAU,EAAK,GAElE,KAKnBuE,KAAKmI,gBAAkB,SAASjG,GAE5B,GAAI9G,GACAgN,EACAC,GAAY3N,EAAKuN,oBAAoB/F,EAEzC,IAAIA,IAAYK,EAAIzB,KAAKzC,KACrB2H,EAAkBxE,UAAUoE,KAAOyC,EACnCD,EAAY1N,EAAKyF,cACd,CAAA,GAAI+B,IAAYK,EAAIzB,KAAK1C,QAI5B,OAAO,CAHP4H,GAAkBxE,UAAUqE,QAAUwC,EACtCD,EAAY1N,EAAKwF,aAMrB,IADAmI,EAAWA,KAAa,EAAQ,MAAO,EAClCjN,EAAI,EAAGA,EAAIgN,EAAU3M,OAAQL,IAC1BgN,EAAUhN,GAAGwG,SAASiB,WAAY,IAClCuF,EAAUhN,GAAGwG,SAASiB,QAAUwF,EAGxC,QAAO,GAGXrI,KAAKiI,oBAAsB,SAAS/F,GAChC,MAAIA,KAAYK,EAAIzB,KAAKzC,KACd2H,EAAkBxE,UAAUoE,KAC5B1D,IAAYK,EAAIzB,KAAK1C,QACrB4H,EAAkBxE,UAAUqE,QAE5B,MAIf7F,KAAKsI,iBAAmB,SAASpG,GAC7B,GAAImG,IAAY3N,EAAK6N,oBAAoBrG,EAEzC,IAAIA,IAAYK,EAAIzB,KAAKzC,KACrB3D,EAAKkK,WAAWzB,YAAckF,MAC3B,CAAA,GAAInG,IAAYK,EAAIzB,KAAK1C,QAG5B,OAAO,CAFP1D,GAAKkK,WAAWxB,eAAiBiF,EAIrC,OAAO,GAGXrI,KAAKuI,oBAAsB,SAASrG,GAChC,MAAIA,KAAYK,EAAIzB,KAAKzC,KACd3D,EAAKkK,WAAWzB,YAChBjB,IAAYK,EAAIzB,KAAK1C,QACrB1D,EAAKkK,WAAWxB,gBAEhB,MAKnBoF,oBAAqB,EACrBC,YAAa,EACbC,kBAAmB,EACnBC,eAAgB,GAChBvM,cAAe,KAEnBwM,GAAI,SAASjN,EAASvB,GAElBA,EAAOD,QAAU,SAAS0O,EAAIC,EAAQC,EAAOtK,EAAOa,EAAO0J,EAAQC,GAE/D,GAAIvO,GAAOsF,IAEXA,MAAK6I,GAAKA,EAEV7I,KAAK8I,OAASA,EAEd9I,KAAK+I,MAAQA,EAEb/I,KAAKgJ,OAASA,EAEdhJ,KAAKiJ,OAASA,EAEdjJ,KAAKvB,MAAQA,EAEbuB,KAAKV,MAAQA,EAEbU,KAAKL,UAELK,KAAKP,cAELO,KAAKF,WAAa,KAElBE,KAAKkJ,cAAgB,SAASC,GAC1B,GAAuB,MAAnBzO,EAAKoF,WAAoB,CACzBpF,EAAKoF,aACL,KAAK,GAAI1E,GAAI,EAAGA,EAAIV,EAAKiF,OAAOlE,OAAQL,IACpCV,EAAK+E,WAAW/E,EAAKiF,OAAOvE,IAAI8N,cAAcxO,EAAKoF,YAG3D,GAAc,MAAVqJ,EAAgB,CAChB,IAAK,GAAIC,GAAI,EAAGA,EAAI1O,EAAKoF,WAAWrE,OAAQ2N,IACxCD,EAAOvJ,KAAKlF,EAAKoF,WAAWsJ,GAEhC,OAAOD,GAEP,MAAOzO,GAAKoF,kBAM5BuJ,GAAI,SAAS1N,EAASvB,GAOlB,GACIkP,IADQ3N,EAAQ,eACJA,EAAQ,oBACpB+H,EAAe/H,EAAQ,gBAEvB4N,EAAY,wCACZC,EAAY,itBAqBZC,EAAY,gBAEhBrP,GAAOD,QAAU,SAAS2B,GAetB,QAAS4N,GAAiB9G,GACtB,MAAO,OAAS+G,EAAc,iBAAmBC,EAAkB,KAAOhH,EAAU,eAGxF,QAASiH,GAAcC,EAASC,EAAkBC,EAAiBC,GAC/D,GAAI7O,GACA8O,EAAMD,GAAU,MACpB,KAAK7O,EAAI,EAAO2O,EAAJ3O,EAAsBA,IAC9B8O,GAAO,WAOX,KAJAA,GAAOJ,EAAQK,OAAO,SAASC,EAAI3L,GAC/B,MAAQ2L,IAAMV,EAAiBjL,EAAMmE,UACtC,IAEExH,EAAI,EAAO4O,EAAJ5O,EAAqBA,IAC7B8O,GAAO,WAEX,OAAOA,GAAM,QAqEjB,QAASG,GAASH,GACd,MAAOA,GArGX,GAAIjK,GAASnE,EAAYD,MAAMoE,OAE3BqK,EAAY5G,EAAauB,SAC7BqF,GAA0B,cAAdA,EAA4B,QAAUA,CAClD,IAAIC,GAAyB,UAAdD,EAEXV,EAAkBW,EAAW,QAAU,QACvCC,EAAa9G,EAAa+G,OAAOH,GACjCI,EAAehH,EAAa9H,MAAM+O,aAAaH,EAAY,IAE3Db,EAAc,oCAAsCC,EAAkB,uBAAyBY,EAAa,eAAiBA,EAAa,IAC1II,EAAc,4BAA8BF,EAAe,eAAiBA,EAAe,IAuB3FG,EAAuBjN,KAAKH,IAAIwC,EAAOG,WAAW3E,OAAS,EAAGK,EAAYgP,OAAOC,WAAWlG,OAE5FzE,EAAayJ,EAAc5J,EAAOG,WAClC,EACAyK,EAAuB5K,EAAOG,WAAW3E,OACzC,+CAGAuP,EAAM,0CAA4CH,EAAuB,eAEzE3K,EAAe2J,EAAc5J,EAAOC,aACpCpE,EAAYgP,OAAOG,WAAWpG,MAC9BgG,GAAwB/O,EAAYgP,OAAOG,WAAWpG,MAAQ5E,EAAOC,aAAazE,SAGlFyP,EAAiB,WAGjB,IAAK,GADD9B,GADAc,EAAM,GAED9O,EAAI,EAAGA,EAAIU,EAAY+J,QAAQiB,QAAQrL,OAAQL,IAAK,CACzD,GAAI+P,GAAUrP,EAAY+J,QAAQiB,QAAQ1L,GACtCgQ,EAAS,MACb,IAAIhQ,EAAIU,EAAY+J,QAAQiB,QAAQrL,OAAS,EACzC,IAAK2N,EAAI,EAAGA,EAAItN,EAAYgP,OAAOG,WAAWpG,MAAOuE,IACjDgC,GAAU,gBAGdA,IAAUnL,EAAOE,UAAUgK,OAAO,SAASC,EAAI3L,GAC3C,MAAQ2L,IAAMV,EAAiBjL,EAAMmE,UACtC,GAGPwI,IAAUD,EAAQhB,OAAO,SAASC,EAAIiB,GAClC,GAAItC,GAAQsC,EAAO9M,OAAS+K,EAAUgC,WAAWC,YAAcF,EAAOtC,MAAMnG,QACtEyI,EAAO9O,WAAa8O,EAAO9O,UAAUwF,WAAcsJ,EAAO9O,UAAUwF,aAAasJ,EAAOtC,OAASsC,EAAOtC,KAG9G,OAFAsC,GAAO9M,OAAS+K,EAAUgC,WAAWE,YAAczC,GAAS,iBAEpDqB,GAAM,OAASQ,EAAc,aAAeS,EAAOI,OAAM,GAAQ,cAAgBJ,EAAOK,OAAM,GAAQ,KAAO3C,EAAQ,SAC9H,IACHmB,GAAOkB,EAAS,QAEpB,MAAOlB,MAGPyB,EAA0B,WAG1B,IAAK,GAFDzB,GAAM,GAED9O,EAAI,EAAGA,EAAIU,EAAY8J,KAAKkB,QAAQrL,OAAQL,IAAK,CACtD,GAAI+P,GAAUrP,EAAY8J,KAAKkB,QAAQ1L,GACnCgQ,EAAS,MACbA,IAAUD,EAAQhB,OAAO,SAASC,EAAIiB,GAClC,GAAItC,GAASsC,EAAO9O,WAAa8O,EAAO9O,UAAUwF,WAAcsJ,EAAO9O,UAAUwF,aAAasJ,EAAOtC,OAASsC,EAAOtC,KAGrH,OAFAsC,GAAO9M,OAAS+K,EAAUgC,WAAWE,YAAczC,GAAS,iBAEpDqB,GAAM,OAASQ,EAAc,aAAeS,EAAOI,OAAM,GAAQ,cAAgBJ,EAAOK,OAAM,GAAQ,KAAO3C,EAAQ,SAC9H,GACH,IAAI6C,GAAU9P,EAAY+P,SAASzQ,EACnCgQ,IAAUQ,EAAQzB,OAAO,SAASC,EAAI0B,EAAUC,GAC5C,GAAIhK,GAAa9B,EAAOG,WAAW2L,GAAgB9L,EAAOG,WAAW3E,QAAQsG,WACzEgH,EAA0B,MAAlB+C,EAAS/C,MAAgB,GAAKhH,EAAaA,IAAa+J,EAAS/C,OAAS+C,EAAS/C,KAC/F,OAAQqB,IAAM,OAASrB,EAAQ,SAChC,IACHmB,GAAOkB,EAAS,QAEpB,MAAOlB,KAQX,OAAOX,GACHc,EAASb,EACL,UAAYpJ,EAAa4K,EAAM9K,EAAegL,EAAgBS,EAAyB,WACvFlC,MAGZd,eAAgB,GAChBqD,kBAAmB,GACnB5P,cAAe,KAEnB6P,GAAI,SAAStQ,EAASvB,GAElB,GAAIwB,GAAQD,EAAQ,eAEhB8H,EAAYrJ,EAAOD,SACnB+R,IAAK,QACLC,KAAM,SACNC,MAAO,WAGX3I,GAAU4D,iBAAmB,SAASgF,EAAUC,EAAMC,EAAaC,GAC/D,GAAI9R,GAAOsF,IAEXA,MAAKqM,SAAWI,EAAIC,IAAIL,GACxBrM,KAAK2M,YAAa,EAClB3M,KAAKsM,KAAOA,GAAQ,KAChBtM,KAAKsM,MAAQtM,KAAKqM,UAAYrM,KAAKqM,SAASO,iBACxChR,EAAMiR,SAAS7M,KAAKsM,QACpBtM,KAAK2M,YAAa,EACb3M,KAAKsM,KAAKQ,aACX9M,KAAKsM,KAAO,GAAIS,QAAO/M,KAAKsM,KAAKU,OAAQ,OAKrDhN,KAAKuM,YAAcA,EACnBvM,KAAKwM,cAAgBA,EAErBxM,KAAKiN,KAAO,SAASlE,GACjB,GAAInN,EAAMmD,QAAQrE,EAAK6R,aAAc,CACjC,GAAIW,GAAQxS,EAAK6R,YAAYlH,QAAQ0D,IAAU,CAC/C,OAAQrO,GAAK8R,gBAAkBU,IAAYxS,EAAK8R,eAAiBU,EAC9D,MAAIxS,GAAK4R,KACL5R,EAAK2R,SAAShP,KAAK0L,EAAOrO,EAAK4R,MAC/B5R,EAAK6R,eAAgB,GAAQ7R,EAAK6R,cAAgB9I,EAAUyI,KAC5D,EACAxR,EAAK6R,eAAgB,GAAS7R,EAAK6R,cAAgB9I,EAAU0I,MAC7D,GAEA,GAIfnM,KAAKmN,aAAe,WAChB,QAASzS,EAAK4R,MAAQ1Q,EAAMmD,QAAQrE,EAAK6R,cAAgB7R,EAAK6R,cAAgB9I,EAAU0I,MAAQzR,EAAK6R,eAAgB,IAI7H,IAAIE,GAAMhJ,EAAU2J,WAChBV,IAAK,SAASpF,GACV,OAAQA,GACJ,IAAKmF,GAAIY,MAAM1O,KACX,MAAO8N,GAAIY,KACf,KAAKZ,GAAIa,SAAS3O,KACd,MAAO8N,GAAIa,QACf,KAAKb,GAAIc,GAAG5O,KACR,MAAO8N,GAAIc,EACf,KAAKd,GAAIe,IAAI7O,KACT,MAAO8N,GAAIe,GACf,KAAKf,GAAIgB,GAAG9O,KACR,MAAO8N,GAAIgB,EACf,KAAKhB,GAAIiB,IAAI/O,KACT,MAAO8N,GAAIiB,GACf,KAAKjB,GAAIkB,GAAGhP,KACR,MAAO8N,GAAIkB,EACf,KAAKlB,GAAImB,IAAIjP,KACT,MAAO8N,GAAImB,GACf,SACI,MAAOnB,GAAIN,OAGvBA,KAAM,KACNkB,OACI1O,KAAM,UACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAIvD,GACOA,EAAMlF,WAAWgK,OAAOjS,EAAMiR,SAASP,GAAQA,EAAO,GAAIS,QAAOT,EAAM,OAAS,GAE5EA,GAGnBM,iBAAiB,GAErBU,UACI3O,KAAM,iBACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAIvD,GACOA,EAAMlF,WAAWgK,OAAOjS,EAAMiR,SAASP,GAAQA,EAAO,GAAIS,QAAOT,EAAM,MAAQ,IAE7EA,GAGjBM,iBAAiB,GAErBW,IACI5O,KAAM,IACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAOvD,IAASuD,GAEpBM,iBAAiB,GAErBY,KACI7O,KAAM,KACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAOvD,IAASuD,GAEpBM,iBAAiB,GAErBa,IACI9O,KAAM,IACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAOvD,GAAQuD,GAEnBM,iBAAiB,GAErBc,KACI/O,KAAM,KACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAOvD,IAASuD,GAEpBM,iBAAiB,GAErBe,IACIhP,KAAM,IACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAeA,GAARvD,GAEX6D,iBAAiB,GAErBgB,KACIjP,KAAM,KACNtB,KAAM,SAAS0L,EAAOuD,GAClB,MAAgBA,IAATvD,GAEX6D,iBAAiB,MAKzBxQ,cAAe,KAEnB0R,GAAI,SAASnS,EAASvB,GAElB,GAAImI,GAAM5G,EAAQ,aACdoS,EAAgBpS,EAAQ,gBAAgBsE,OACxCwD,EAAY9H,EAAQ,mBACpBI,EAAQJ,EAAQ,eAChBC,EAAQD,EAAQ,cAEpBvB,GAAOD,QAAU,SAAS8F,GAkBtB,QAAS+N,GAAQC,GACTA,KAAmB,GACnBC,IAEJxT,EAAKkL,KAAKvF,SACV3F,EAAKmL,QAAQxF,SACb8N,IAGJ,QAASD,KACL,GAAIE,GAAexS,EAAMiL,cAAcnM,EAAK2T,QAC5C,IAAID,EAAa3S,OAAS,EAAG,CACzBf,EAAKmE,qBAEL,KAAK,GAAIzD,GAAI,EAAGA,EAAIV,EAAKuF,OAAOwE,WAAWhJ,OAAQL,IAAK,CAGpD,IAAK,GAFD8D,GAAMxE,EAAKuF,OAAOwE,WAAWrJ,GAC7BkT,GAAU,EACL9J,EAAK,EAAGA,EAAK4J,EAAa3S,OAAQ+I,IAAM,CAC7C,GAAIF,GAAY8J,EAAa5J,GACzB+J,EAAc7T,EAAK2T,QAAQ/J,EAE/B,IAAIiK,IAAgBA,EAAYtB,KAAK/N,EAAIoF,IAAa,CAClDgK,GAAU,CACV,QAGHA,GACD5T,EAAKmE,mBAAmBe,KAAKV,QAIrCxE,GAAKmE,mBAAqBnE,EAAKuF,OAAOwE,WAuG9C,QAAS+J,GAAa1O,EAAY2O,EAAYC,EAAgB9H,EAAY9E,GAEtE,GAAI6M,KAEJ,IAAIjU,EAAKuF,OAAO8F,gBAAkB,EAAG,CAEjC,GAAIvJ,EAEJ,IAAkB,MAAdsD,EACAtD,EAAeiS,MACZ,IAAkB,MAAdA,EACPjS,EAAesD,MACZ,CACHtD,IACA,KAAK,GAAIoS,GAAK,EAAGA,EAAK9O,EAAWrE,OAAQmT,IAAM,CAC3C,GAAIC,GAAW/O,EAAW8O,EAC1B,IAAIC,GAAY,EAAG,CACf,GAAIC,GAAcL,EAAWpJ,QAAQwJ,EACjCC,IAAe,IACfhP,EAAW8O,GAAM,GAAKC,EAAW,GACjCrS,EAAaoD,KAAKiP,MAMlC,GAEItS,GAFAwS,EAAoBvS,GAAwC,IAAxBA,EAAaf,OAGjDuT,GAFatU,EAAKmE,sBAItB,IAAI+H,EACA,IAAK,GAAIqI,GAAiB,EAAGA,EAAiBrI,EAAWnL,OAAQwT,IAC7D1S,EAAY7B,EAAKuF,OAAOmG,aAAaQ,EAAWqI,IAC3CnN,IACIvF,EAMDuF,EAAgBvF,EAAUuF,iBAL1BvF,EAAY7B,EAAKuF,OAAOgG,SAASW,EAAWqI,IACxC1S,IACAuF,EAAgBvF,EAAUmG,aAAenG,EAAUmG,aAAaZ,gBAAkBvF,EAAUuF,mBAOpGvF,GAAauF,GACbkN,EAAWpP,MACPnB,MAAOlC,EACPuF,cAAeA,QAK3B,KAAK,GAAIoN,GAAiB,EAAGA,EAAiBxU,EAAKuF,OAAO8F,gBAAiBmJ,IACvE3S,EAAY7B,EAAKuF,OAAOG,WAAW8O,IAAmBC,GAClDrN,GAAiBvF,EAAUuF,gBAC3BkN,EAAWpP,MACPnB,MAAOlC,EACPuF,cAAeA,GAAiBvF,EAAUuF,iBAM1D,KAAK,GAAIsN,GAAM,EAAGA,EAAMJ,EAAWvT,OAAQ2T,IACvC7S,EAAYyS,EAAWI,GAGnBT,EAAIpS,EAAUkC,MAAME,MADpBoQ,EAC4B,KAEAxS,EAAUuF,cAAcvF,EAAUkC,MAAME,KAAMnC,GAAgB,MAAO9B,EAAKmE,mBAAoB6P,GAAkB5O,EAAY2O,GAKpK,MAAOE,GAGX,QAASU,GAAiBC,GAEtB,GAAIA,EAAQ,CACR,GAAIxJ,MACAyJ,EAAM,IAAMD,EAAOzG,EAUvB,IAPqBnJ,SAAjB8P,EAAQD,KACRC,EAAQD,GAAOD,EAAOtG,OAAS,KAAQwG,EAAQF,EAAOxG,OAAOD,KAAOyG,EAAOpG,iBAI/EpD,EAAKpL,EAAKmL,QAAQzG,KAAKyJ,IAAM2F,EAAac,EAAOtG,OAAS,KAAOwG,EAAQD,GAAKE,MAAM,GAAI,MAEpF/U,EAAKmL,QAAQ/G,gBAAkB,EAI/B,IAHA,GAAI4Q,GAAI,EACJhP,GAAWhG,EAAKmL,QAAQzG,MAErBsQ,EAAIhP,EAAQjF,QAAQ,CAQvB,IAAK,GAPDqN,GAASpI,EAAQgP,GACjBC,EAAaL,EAAOtG,OACpB,KACCF,EAAOE,OACJwG,EAAQD,GAAKE,MAAM,GACnBD,EAAQ,IAAM1G,EAAOD,IAAI4G,MAAM,GAE9BrU,EAAI,EAAGA,EAAI0N,EAAOnJ,OAAOlE,OAAQL,IAAK,CAC3C,GAAIwU,GAAS9G,EAAOrJ,WAAWqJ,EAAOnJ,OAAOvE,IACzCyU,EAAM,IAAMD,EAAO/G,EASvB,IANqBnJ,SAAjB8P,EAAQK,KACRL,EAAQK,GAAOL,EAAQK,IAAQD,EAAO1G,gBAAgBuG,MAAM,IAGhE3J,EAAK8J,EAAO/G,IAAM2F,EAAamB,EAAYH,EAAQK,GAAMP,EAAOtG,OAAS,KAAOsG,EAAOpG,kBAElF0G,EAAO3G,SACRvI,EAAQd,KAAKgQ,GACTD,GAAY,CACZH,EAAQK,KACR,KAAK,GAAIC,GAAK,EAAGA,EAAKH,EAAWlU,OAAQqU,IAAM,CAC3C,GAAIC,GAAKJ,EAAWG,EACV,KAANC,GAAiB,EAALA,IACZP,EAAQK,GAAKjQ,KAAK,GAAKmQ,EAAK,IAC5BJ,EAAWG,GAAM,MAMrCN,EAAQ,IAAM1G,EAAOD,IAAMnJ,OAC3BgQ,IAIR,MAAO5J,IAIf,QAASqI,KAOL,GANAzT,EAAKsV,cACLR,KAGA9U,EAAKsV,WAAWtV,EAAKkL,KAAKxG,KAAKyJ,IAAMwG,EAAiB3U,EAAKkL,KAAKxG,MAE5D1E,EAAKkL,KAAK9G,gBAAkB,EAI5B,IAHA,GAEIgK,GAFApI,GAAWhG,EAAKkL,KAAKxG,MACrBsQ,EAAI,EAEDA,EAAIhP,EAAQjF,QAAQ,CACvBqN,EAASpI,EAAQgP,EAEjB,KAAK,GAAItU,GAAI,EAAGA,EAAI0N,EAAOnJ,OAAOlE,OAAQL,IAAK,CAC3C,GAAIwU,GAAS9G,EAAOrJ,WAAWqJ,EAAOnJ,OAAOvE,GAE7CV,GAAKsV,WAAWJ,EAAO/G,IAAMwG,EAAiBO,GAEzCA,EAAO3G,QACRvI,EAAQd,KAAKgQ,GAIrBF,KAxTZ,GAKIF,GALAL,GACAxQ,KAAM,eAGNjE,EAAOsF,IAIXA,MAAKC,OAAS,GAAI8N,GAAc9N,GAChCD,KAAKqO,QAAU3T,EAAKuF,OAAO8G,gBAC3B/G,KAAKnB,mBAAqBnE,EAAKuF,OAAOwE,WAEtCzE,KAAK4F,KAAO,GAAIrD,GAAI7H,EAAM6H,EAAIzB,KAAKzC,MACnC2B,KAAK6F,QAAU,GAAItD,GAAI7H,EAAM6H,EAAIzB,KAAK1C,SACtC4B,KAAKgQ,cAqCLhQ,KAAKuH,UAAY,SAASjD,EAAWkD,EAAYC,EAAYC,GACzD,MAAIhN,GAAKuF,OAAOsH,UAAUjD,EAAWkD,EAAYC,EAAYC,IACzDsG,GAAQ,IACD,IAEJ,GAGXhO,KAAKiQ,YAAc,SAAS3L,EAAW+H,EAAUC,EAAMC,EAAaC,GAChE9R,EAAK2T,QAAQ/J,GAAa,GAAIb,GAAU4D,iBAAiBgF,EAAUC,EAAMC,EAAaC,GACtFwB,KAGJhO,KAAKkQ,YAAc,SAASpK,GACxBpL,EAAKuF,OAAOwE,WAAaqB,EACzBkI,KAGJhO,KAAKmQ,eAAiB,SAAS1R,EAAO2R,GAIlC,IAAK,GAHDC,MACA1Q,KACA2Q,GAAgB,EACXlV,EAAI,EAAGA,EAAIV,EAAKuF,OAAOwE,WAAWhJ,OAAQL,IAAK,CACpD,GAAI8D,GAAMxE,EAAKuF,OAAOwE,WAAWrJ,GAC7B2B,EAAMmC,EAAIT,EACKiB,UAAf0Q,GACIA,KAAe,GAA+B,kBAAfA,IAA6BA,EAAWrT,KACvEsT,EAAQzQ,KAAK7C,GAGL2C,SAAR3C,EACAsT,EAAQzQ,KAAK7C,GAEbuT,GAAgB,EAI5B,GAAID,EAAQ5U,OAAS,EAAG,CAChBG,EAAM2U,SAASF,EAAQ,KAAOzU,EAAM4U,OAAOH,EAAQ,IACnDA,EAAQ9P,KAAK,SAASrF,EAAGuV,GACrB,MAAOvV,GAAKuV,EAAIvV,EAAIuV,EAAI,EAAMA,EAAI,GAAK,IAG3CJ,EAAQ9P,MAGZ,KAAK,GAAImQ,GAAK,EAAGA,EAAKL,EAAQ5U,OAAQiV,KACvB,IAAPA,GAAYL,EAAQK,KAAQ/Q,EAAOA,EAAOlE,OAAS,KACnDkE,EAAOC,KAAKyQ,EAAQK,QAI5B/Q,GAAS0Q,CAGb,OADA1Q,GAAO2Q,cAAgBA,EAChB3Q,GAGXK,KAAK2Q,eAAiB,SAASlS,GAC3B,MAAO/D,GAAK2T,QAAQ5P,IAGxBuB,KAAK4Q,gBAAkB,SAASnS,GAC5B,GAAI6H,GAAS5L,EAAKiW,eAAelS,EACjC,OAAiB,OAAV6H,IAAmBA,EAAO6G,gBAGrCnN,KAAK6Q,QAAU,SAASpS,EAAOqS,EAAQC,EAAQjP,GAC3C,GAAIiH,EACJ,IAAI+H,GAAUC,EAAQ,CAElB,GAAIC,GAAgBvS,IAAU/D,EAAKuF,OAAOG,WAAW,IAAM+O,GAAcxQ,KACrEpC,EAAY7B,EAAKuF,OAAOmG,aAAa4K,EAGrCjI,IADCxM,GAAcuF,GAAiBvF,EAAUuF,eAAiBA,EACnDpH,EAAKuW,gBACTH,EAAO9H,OAAS,KAAO8H,EAAO5H,gBAAgBuG,MAAM,GACpDsB,EAAO/H,OAAS,KAAO+H,EAAO7H,gBAAgBuG,MAAM,IAAKuB,GACzDlP,GAAekP,GAEftW,EAAKsV,WAAWc,EAAOjI,KAAOnO,EAAKsV,WAAWc,EAAOjI,IAAIkI,EAAOlI,IACxDnO,EAAKsV,WAAWc,EAAOjI,IAAIkI,EAAOlI,IAAImI,GAEtC,KAKpB,MAAiBtR,UAAVqJ,EAAsB,KAAOA,GAGxC/I,KAAKiR,gBAAkB,SAASnR,EAAY2O,EAAY7H,EAAY9E,GAChE,MAAO0M,GAAa1O,EAAY2O,EAAY3O,EAAY8G,EAAY9E,IAGxE9B,KAAKjE,MAAQA,EAAMrB,GAEnBsT,OA2KJvF,YAAa,EACbyI,eAAgB,EAChBxI,kBAAmB,EACnBxM,cAAe,EACfE,cAAe,KAEnB+U,GAAI,SAASxV,EAASvB,GAElB,GAAIwB,GAAQD,EAAQ,eAChB4G,EAAM5G,EAAQ,aACdqH,EAAcrH,EAAQ,qBAEtByV,EAAY,SAASpE,EAAQjR,EAAOsS,GAEpC,GAAI3T,GAAOsF,IAEXA,MAAKgN,OAASA,EACdhN,KAAKjE,MAAQA,EACbiE,KAAKqO,QAAUA,EAEfrO,KAAKqR,cAAgB,SAASC,EAAMpO,EAASqO,GACzC,GAAIA,EAAUC,SAAU,EAAM,CAE1B,IAAK,GADD7C,MACK8C,EAAK,EAAGA,EAAKvO,EAAQwO,gBAAgBjW,OAAQgW,IAClD9C,EAAIzL,EAAQwO,gBAAgBD,IAAOH,EAAK5W,EAAKiX,eAAezO,EAAQwO,gBAAgBD,IAExF,OAAO9C,GAEP,MAAO2C,GAAKC,EAAUK,gBAI9B5R,KAAK6R,YAAc,SAASD,EAAeJ,EAAO1P,EAAegQ,GAE7D,GAAIP,IACAK,cAAelX,EAAKiX,eAAeC,GACnCJ,MAAOA,EACP1P,cAAeA,EAGnB,OAAO,UAASoB,GACZA,EAAUxI,EAAKqX,aAAa7O,EAASxB,UAAW6P,EAChD,IAAID,GAAO5W,EAAKsX,QAAQ9O,EAAS4O,EAAcN,EAC/C,OAAO9W,GAAK2W,cAAcC,EAAMpO,EAASqO,KAIjDvR,KAAKiS,uBAAyB,SAASC,GAGnC,GAAIC,GAAUzX,EAAKqB,MAAMgB,IAAM,OAAS,KACxCrC,GAAKqB,MAAMoW,GAAWzX,EAAKmX,YAAYnS,QAAW,EAAMA,OAAWwS,EAInE,KAAK,GADDE,GAAexW,EAAMiL,cAAc7D,GAC9BqP,EAAY,EAAGA,EAAYD,EAAa3W,OAAQ4W,IAAa,CAClE,GAAIC,GAAWF,EAAaC,EACX,qBAAbC,IACA5X,EAAKqB,MAAMuW,GAAY5X,EAAKmX,YACxBnS,QACA,EACAsD,EAAYsP,GACZJ,OAQhBK,EAAa,SAAS1W,GAyFtB,QAAS2W,GAAiBC,EAAWnM,GACjC,MAAO,UAASnH,GACZ,MAAOA,GAAI4J,QAAUzC,EAAOvJ,OACtB0V,GAAaA,EAAUC,KACrB,SAASC,GACL,GAAI7J,GAAS3J,EAAI2J,MACjB,IAAIA,EACA,KAAOA,EAAOxJ,MAAQqT,EAASrT,OAC3BwJ,EAASA,EAAOA,MAGxB,OAAOA,KAAW6J,MAlGtCvB,EAAU5V,KAAKwE,KAAMnE,QAErB,IAAInB,GAAOsF,IAEXA,MAAK2R,eAAiB,SAAS/O,GAC3B,MAAOlI,GAAKsS,OAAO/M,OAAOkE,cAAcvB,IAG5C5C,KAAK+R,aAAe,SAAS7O,EAAS0P,EAAWrB,GAC7C,GAAIsB,IACAjM,cAGJ,IAAI2K,EAAUC,SAAU,EAAM,CACtBtO,GAA8B,gBAAZA,IAClB2P,EAAK/Q,cAAgBoB,EAAQpB,cAC7B+Q,EAAKnB,gBAAkBxO,EAAQxE,SAE/BmU,EAAK/Q,cAAgByP,EAAUzP,cAC/B+Q,EAAKnB,gBAAkBkB,EAG3B,KAAK,GAAInB,GAAK,EAAGA,EAAKoB,EAAKnB,gBAAgBjW,OAAQgW,IAC/CoB,EAAKjM,WAAWhH,KAAKlF,EAAKiX,eAAekB,EAAKnB,gBAAgBD,SAGlEoB,GAAK/Q,cAAgBoB,EACrB2P,EAAKjM,WAAWhH,KAAK2R,EAAUK,cAOnC,OAJIiB,GAAK/Q,gBACL+Q,EAAK/Q,cAAgBkB,EAAY5F,gBAAgByV,EAAK/Q,gBAGnD+Q,GAGX7S,KAAK8S,MAAQ,SAASC,GAClB,GAGIC,GAHA7S,EAAYzF,EAAKsS,OAAO/M,OAAOE,UAC/B8S,EAAYvY,EAAKsS,OAAO/M,OAAOC,aAC/B8O,EAAatU,EAAKsS,OAAO/M,OAAOG,UAIpC,KAAK4S,EAAS,EAAGA,EAAS7S,EAAU1E,OAAQuX,IACxCtY,EAAK+U,MAAMtP,EAAU6S,GAASzQ,EAAIzB,KAAKzC,KAAM8B,EAAU1E,OAASuX,EAIpE,KAAKA,EAAS,EAAGA,EAASC,EAAUxX,OAAQuX,IACxCtY,EAAK+U,MAAMwD,EAAUD,GAASzQ,EAAIzB,KAAK1C,QAAS6U,EAAUxX,OAASuX,EAIvE,KAAKA,EAAS,EAAGA,EAAShE,EAAWvT,OAAQuX,IAAU,CACnD,GAAIE,GAAKlE,EAAWgE,GAChBG,EAASD,EAAGvU,KACZyU,EAAYF,EAAGtQ,SAAWuQ,CAE9BzY,GAAKqB,MAAMoX,GAAUzY,EAAKqB,MAAMqX,GAAa1Y,EAAKmX,YAAYsB,GAGlE,GAAIJ,EACA,IAAK,GAAIb,KAASa,GACVA,EAAWM,eAAenB,IAC1BxX,EAAKqB,MAAMmW,GAAOa,EAAWb,GAOzC,OAFAxX,GAAKuX,yBAEEvX,EAAKqB,OAGhBiE,KAAKyP,MAAQ,SAAShR,EAAOyD,EAAS5C,GAClC5E,EAAKqB,MAAM0C,EAAME,MAAQjE,EAAKqB,MAAM0C,EAAMmE,SAAWnE,EAAME,MAAQ,SAAS5B,GACxE,GAAIxC,IACAoE,KAAMF,EAAME,KACZ5B,IAAKA,EACLuC,MAAOA,EAGX,QADC5E,EAAK2T,QAAQnM,GAAWxH,EAAK2T,QAAQnM,QAAgBtC,KAAKrF,GACpDG,EAAKqB,QAoBpBiE,KAAKsT,aAAe,SAASpR,GACzB,GAAIxH,EAAK2T,QAAQnM,GAAU,CAQvB,IAPA,GAAIqR,GAAgB7Y,EAAK2T,QAAQnM,GAAS3B,KAAK,SAASiT,EAAIC,GACxD,MAAOA,GAAGnU,MAAQkU,EAAGlU,QAGrBoU,EAAUhZ,EAAKsS,OAAO9K,IAAYK,EAAIzB,KAAKzC,KAAO,OAAS,WAC3DsV,EAAc,EACdC,EAAW,KACRD,EAAcJ,EAAc9X,QAAQ,CACvC,GAAI6K,GAASiN,EAAcI,EAC3BC,GAAWF,EAAQ3T,kBAAkBuG,EAAOhH,OACvCgH,OAAOkM,EAAiBoB,EAAUtN,IACvCqN,IAEJ,MAAOC,GAEX,MAAO,OAGX5T,KAAKgS,QAAU,SAAS9O,GACpB,GAGIoO,GAHAuC,EAAUnZ,EAAK4Y,aAAa/Q,EAAIzB,KAAKzC,QAAU3D,EAAKsS,OAAOpH,KAAKxG,MAChE0U,EAAUpZ,EAAK4Y,aAAa/Q,EAAIzB,KAAK1C,WAAa1D,EAAKsS,OAAOnH,QAAQzG,KAI1E,IAAuB,IAAnByU,EAAQpY,QAAmC,IAAnBqY,EAAQrY,OAAc,CAC9C6V,IACA,KAAK,GAAIG,GAAK,EAAGA,EAAKvO,EAAQ0D,WAAWnL,OAAQgW,IAC7CH,EAAKpO,EAAQ0D,WAAW6K,IAAO/W,EAAKsS,OAAO6D,QAAQ3N,EAAQ0D,WAAW6K,GAAKoC,EAAQ,GAAIC,EAAQ,GAAI5Q,EAAQpB,mBAE5G,CAIH,IAAK,GAHDhC,MACA2O,KAEKsF,EAAM,EAAGA,EAAMF,EAAQpY,OAAQsY,IACpCjU,EAAaA,EAAWkU,OAAOH,EAAQE,GAAK7K,gBAEhD,KAAK,GAAI+K,GAAM,EAAGA,EAAMH,EAAQrY,OAAQwY,IACpCxF,EAAaA,EAAWuF,OAAOF,EAAQG,GAAK/K,gBAGhDoI,GAAO5W,EAAKsS,OAAOiE,gBAAgBnR,EAAY2O,EAAYvL,EAAQ0D,WAAY1D,EAAQpB,eAG3F,MAAOwP,KAIX4C,EAAa,SAASC,GAEtB/C,EAAU5V,KAAKwE,KAAMmU,QAErB,IAAIzZ,GAAOsF,KACPmE,IAEJnE,MAAKoU,eAAiB,SAASxR,EAASjE,GACpCwF,EAAcvB,GAAWjE,GAAQA,GAGrCqB,KAAK2R,eAAiB,SAAS/O,GAC3B,MAAOuB,GAAcvB,IAAYA,GAGrC5C,KAAK+R,aAAe,SAAS7O,EAAS0P,EAAWrB,GAC7C,GAAIsB,IACAjM,cAGJ,IAAI2K,EAAUC,SAAU,EAAM,CACtBtO,GAA8B,gBAAZA,IAClB2P,EAAK/Q,cAAgBoB,EAAQpB,cAC7B+Q,EAAKnB,gBAAkBxO,EAAQxE,SAE/BmU,EAAK/Q,cAAgByP,EAAUzP,cAC/B+Q,EAAKnB,gBAAkBkB,EAG3B,KAAK,GAAInB,GAAK,EAAGA,EAAKoB,EAAKnB,gBAAgBjW,OAAQgW,IAC/CoB,EAAKjM,WAAWhH,KAAKlF,EAAKiX,eAAekB,EAAKnB,gBAAgBD,SAGlEoB,GAAK/Q,cAAgBoB,GAAWqO,EAAUzP,cAC1C+Q,EAAKjM,WAAWhH,KAAK2R,EAAUK,cAGnC,OAAOiB,IAGX7S,KAAK8S,MAAQ,SAAShB,GAWlB,GATApX,EAAKqB,MAAM0T,MAAQ,SAAShR,EAAO1B,GAC/B,GAAIxC,IACAoE,KAAMF,EACN1B,IAAKA,EAGT,OADArC,GAAK2T,QAAQzO,KAAKrF,GACXG,EAAKqB,OAGZ+V,EAIA,IAAK,GAFDlL,GAAahL,EAAMiL,cAAciL,GAE5BtN,EAAK,EAAGA,EAAKoC,EAAWnL,OAAQ+I,IAAM,CAC3C,GAAI6P,GAAQzN,EAAWpC,GACnBjK,EAAIuX,EAAauC,GACjBC,EAAW/Z,EAAEqI,SAAWrI,EAAEoE,IAC9BpE,GAAEoE,KAAO0V,EAET3Z,EAAK0Z,eAAeE,EAAUD,GAE1B9Z,EAAEga,YACF7Z,EAAKqB,MAAMsY,GAAS3Z,EAAKqB,MAAMuY,GAAY5Z,EAAKmX,YAAYwC,GAAO,EAAO9Z,EAAEuH,eAE5EpH,EAAK+U,MAAMlV,GAOvB,MAFAG,GAAKuX,uBAAuBH,GAErBpX,EAAKqB,OAGhBiE,KAAKyP,MAAQ,SAAShR,GAClB/D,EAAKqB,MAAM0C,EAAME,MAAQjE,EAAKqB,MAAM0C,EAAMmE,SAAWnE,EAAME,MAAQ,SAAS5B,GACxE,MAAOrC,GAAKqB,MAAM0T,MAAMhR,EAAME,KAAM5B,KAI5CiD,KAAKsT,aAAe,WAGhB,IAAK,GAFDxT,MAEK1E,EAAI,EAAGA,EAAIV,EAAKsS,OAAOvR,OAAQL,IAAK,CAGzC,IAAK,GAFD8D,GAAMxE,EAAKsS,OAAO5R,GAClBoZ,GAAU,EACLpL,EAAI,EAAGA,EAAI1O,EAAK2T,QAAQ5S,OAAQ2N,IAAK,CAC1C,GAAI9C,GAAS5L,EAAK2T,QAAQjF,EAC1B,IAAIlK,EAAIoH,EAAO3H,QAAU2H,EAAOvJ,IAAK,CACjCyX,GAAU,CACV,QAGJA,GACA1U,EAAWF,KAAKxE,GAIxB,MAAO0E,IAGXE,KAAKgS,QAAU,SAAS9O,EAAS4O,EAAcN,GAK3C,IAAK,GAJD1R,GAAapF,EAAK4Y,eAElBhC,KAEKG,EAAK,EAAGA,EAAKvO,EAAQ0D,WAAWnL,OAAQgW,IAAM,CACnD,GAAIlV,GAAY2G,EAAQ0D,WAAW6K,GAC/BgD,EAAUzR,EAAY5F,gBACtBoU,KAAU,EACVtO,EAAQpB,gBAAkBgQ,GAAgBA,EAAavV,GACnDuV,EAAavV,GAAWuF,cACxBpC,QACJwD,EAAQpB,cAEZwP,GAAK/U,GAAakY,EAAQlY,EAAWuD,GAAc,MAAOpF,EAAKsS,OAAQlN,EAAY,MAGvF,MAAOwR,IAIflX,GAAOD,QAAU,SAAS6S,EAAQ8E,GAC9B,MAAIlW,GAAMmD,QAAQiO,GACP,GAAIkH,GAAWlH,GAAQ8F,MAAMhB,GAG7B,SAASiB,GACZ,MAAO,IAAIR,GAAWvF,GAAQ8F,MAAMC,OAMhDvK,oBAAqB,EACrBC,YAAa,EACbrM,cAAe,KAEnBsY,IAAK,SAAS/Y,EAASvB,GAInBA,EAAOD,QAAU,WACb,GAAIwa,KAEJ3U,MAAK4U,IAAM,SAASC,EAAKC,GACrBH,EAAOE,GAAOC,GAGlB9U,KAAK0M,IAAM,SAASmI,GAChB,MAAOF,GAAOE,UAI1BE,IAAK,SAASpZ,EAASvB,GAEnBA,EAAOD,QAAW,WAKd,QAAS6a,KACL,MAAwB,cAAjBC,EAJX,GAAIA,GAAe,OACfvR,IAMJA,GAAa+G,QACTyK,IAAK,UACLC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,MAAO,WAGX/R,EAAauB,QAAU,SAASQ,GAK5B,MAJIA,KACAwP,EAAevR,EAAagS,cAAcjQ,IAGvCwP,GAGXvR,EAAagS,cAAgB,SAASC,GAElC,MADAA,IAAaA,GAAa,IAAI9R,WAAW+R,OACpClS,EAAa+G,OAAOkL,IAA4B,cAAdA,EAG5BA,EAFA,QAMfjS,EAAamS,gBAAkB,WAC3B,OACIC,UAAW,qBAAuBb,EAClCc,MAAO,OAASf,IAAgB,SAAW,MAInDtR,EAAasS,iBAAmB,WAC5B,OACIC,YAAa,WAAajB,IAAgB,0BAA4B,IACtEkB,UAAW,WAAalB,IAAgB,0BAA4B,IACpEmB,UAAWnB,IAAgB,0BAA4B,KAI/DtR,EAAa0S,iBAAmB,WAC5B,OACIN,UAAW,OAASb,EAAe,oBAI3CvR,EAAa2S,eAAiB,WAC1B,OACIN,MAAOf,IAAgB,wBAA0B,cAIzDtR,EAAa4S,iBAAmB,SAASzT,GACrC,GAAI0T,IACAC,QAAS,4BAA8B3T,EAAU,UAAY,UAAY,QAAUoS,EACnFwB,OAAQ,aACRC,QAAS,GACTrL,OAAQ,oBACRsL,MAAO,GACPC,KAAM,kBAWV,OARI5B,OACAuB,EAAQC,SAAW,SACnBD,EAAQE,QAAU,gBAClBF,EAAQG,QAAU,gBAClBH,EAAQlL,QAAU,gBAClBkL,EAAQI,MAAQ,cAChBJ,EAAQK,MAAQ,eAEbL,EAGX,IAAI3a,GAAQ8H,EAAa9H,OACrBib,SAAU,SAASC,GACf,GAAI3N,GAAS,4CAA4C4N,KAAKD,EAC9D,OAAO3N,IACHrO,EAAGkc,SAAS7N,EAAO,GAAI,IACvB8N,EAAGD,SAAS7N,EAAO,GAAI,IACvBsH,EAAGuG,SAAS7N,EAAO,GAAI,KACvB,MAER+N,UAAW,SAASC,GAChB,GAAIC,GAAUD,EAAKE,MAAM,iEACzB,IAAID,EAAS,CACT,GAAIE,GAAQC,WAAWH,EAAQ,GAC/B,OAAO,IACHxb,EAAM4b,mBAAmBJ,EAAQ,GAAIE,GACrC1b,EAAM4b,mBAAmBJ,EAAQ,GAAIE,GACrC1b,EAAM4b,mBAAmBJ,EAAQ,GAAIE,GAE7C,MAAO,OAEXE,mBAAoB,SAASzO,EAAO0O,GAChC,OAAQ7Z,KAAK8Z,MAAMD,EAAQT,SAASjO,GAAuB,KAAb,EAAI0O,IAAgB,KAAK5T,SAAS,IAAI8T,OAAO,EAAG,IAElGhN,aAAc,SAASiN,EAAOH,GAE1B,MADAG,GAAQhc,EAAMib,SAASe,GAChB,IACHhc,EAAM4b,mBAAmBI,EAAM9c,EAAG2c,GAClC7b,EAAM4b,mBAAmBI,EAAMX,EAAGQ,GAClC7b,EAAM4b,mBAAmBI,EAAMnH,EAAGgH,IAI9C,OAAO/T,WAIfmU,IAAK,SAASlc,EAASvB,GAEnB,GAAImI,GAAM5G,EAAQ,aACd2N,EAAY3N,EAAQ,kBAExBvB,GAAOD,QAAU,SAAS2d,GAEtB,GAAIpd,GAAOsF,IAGXA,MAAKuC,IAAMuV,EAGX9X,KAAK8G,WAEL9G,KAAK+F,gBAAkB,WACnB,MAAsD,YAA9CrL,EAAK6H,IAAI1G,MAAMoE,OAAO0E,qBAAqCjK,EAAK6H,IAAIhE,OAASgE,EAAIzB,KAAK1C,SAC3C,SAA9C1D,EAAK6H,IAAI1G,MAAMoE,OAAO0E,qBAAkCjK,EAAK6H,IAAIhE,OAASgE,EAAIzB,KAAKzC,KACpF3D,EAAK6H,IAAI1G,MAAMoE,OAAO8F,gBACtB,GAGR/F,KAAK+X,kBAAoB,WACrB,MAAOrd,GAAKqL,kBAAoB,GAGpC/F,KAAKgY,qBAAuB,SAASvZ,EAAO4J,GAKxC,IAAK,GAFD4P,GAFAC,KACAC,GAAc,EAGT/c,EAAI,EAAGA,EAAI4E,KAAK8G,QAAQrL,OAAQL,IACrC,IAAK6c,EAAS,EAAGA,EAASjY,KAAK8G,QAAQ1L,GAAGK,OAAQwc,IAAU,CACxD,GAAI5M,GAASrL,KAAK8G,QAAQ1L,GAAG6c,EACzB5M,GAAO9M,OAAS+K,EAAUgC,WAAWE,WAAuB,MAAT/M,GAAiB4M,EAAOlM,IAAIV,MAAME,MAAQF,EAAME,OACnGuZ,EAAStY,KAAKyL,GACd8M,EAAcA,GAAe9M,EAAO+M,UAShD,GAJiB1Y,SAAb2I,IACA8P,GAAe9P,GAGf6P,EAASzc,OAAS,EAAG,CACrB,IAAKwc,EAAS,EAAGA,EAASC,EAASzc,OAAQwc,IACnCE,EACAD,EAASD,GAAQI,WAEjBH,EAASD,GAAQK,QAGzB,QAAO,EAGX,OAAO,MAKf7P,YAAa,EACbuD,kBAAmB,KAEvBuM,IAAK,SAAS5c,EAASvB,GAEnB,GAAImI,GAAM5G,EAAQ,aACd6c,EAAQ7c,EAAQ,gBAChB2N,EAAY3N,EAAQ,kBAExBvB,GAAOD,QAAU,SAASse,GAkCtB,QAASC,KAIL,QAASC,GAAaC,GACdA,GAAWA,EAAQzZ,IAAIV,MAAMmD,SAASiB,SACtCgW,EAAajZ,KAAKgZ,EAAQE,gBAJlC,GAAID,KAQJ,IAAIne,EAAKoM,QAAQrL,OAAS,EAAG,CAEzB,GAAIsd,GAAQre,EAAKoM,QAAQpM,EAAKoM,QAAQrL,OAAS,GAC3C4P,EAAS0N,EAAM,EAEnB,IAAI1N,EAAQ,CAIR,IAAK,GAHD2N,GACAC,EAAU5N,EAAOvC,OAEZ1N,EAAI,EAAGA,EAAI2d,EAAMtd,OAAQL,IAAK,CAKnC,GAJAiQ,EAAS0N,EAAM3d,GACf4d,EAAa3N,EAAOvC,OAGhBkQ,GAAcC,EAAS,CAEvB,GADAN,EAAaM,GACK,MAAdD,EAKA,IAFA,GAAIE,GAAWF,EAAWlQ,OACtBqQ,EAAeF,EAAUA,EAAQnQ,OAAS,KACvCoQ,GAAYC,GAAgC,MAAhBA,GAC/BR,EAAaQ,GACbD,EAAWA,EAAWA,EAASpQ,OAAS,KACxCqQ,EAAeA,EAAeA,EAAarQ,OAAS,IAI5DmQ,GAAUD,EAMd,GAHAH,EAAajZ,KAAKmZ,EAAM3d,IAGpBA,IAAM2d,EAAMtd,OAAS,EACrB,KAAkB,MAAXwd,GACHN,EAAaM,GACbA,EAAUA,EAAQnQ,OAK1BpO,EAAK6H,IAAI1G,MAAMoE,OAAO2E,WAAWxB,gBAAkB1I,EAAK6H,IAAIzD,gBAAkB,GAE9E+Z,EAAajZ,KAAKlF,EAAKoM,QAAQ,GAAGpM,EAAKoM,QAAQ,GAAGrL,OAAS,KAMvE,GAAIf,EAAKqd,oBAAqB,CAC1Brd,EAAKme,eACL,KAAK,GAAIO,GAAY,EAAGA,EAAYP,EAAapd,OAAQ2d,IACrD,IAAK,GAAIC,GAAiB,EAAGA,EAAiB3e,EAAKqL,kBAAmBsT,IAClE3e,EAAKme,aAAajZ,KAAK,GAAI0J,GAAUgQ,WAAW5e,EAAK6H,IAAI1G,MAAMoE,OAAOG,WAAWiZ,GAAiBR,EAAaO,IAGvH1e,GAAKoM,QAAQlH,KAAKlF,EAAKme,kBAEvBne,GAAKme,aAAeA,EAO5B,QAASU,GAAUja,EAAOwH,GAQtB,IAAK,GANDiS,GAAQjS,EAAQA,EAAQrL,OAAS,GACjCiF,EAAUhG,EAAK6H,IAAInD,KAAKE,QAAUA,GAAS,MAC3CwH,EAAQpM,EAAK6H,IAAInD,KAAKE,MAAQA,EAAQ,GAAGgH,OAAO,SAASoJ,GACrD,MAAOA,GAAEnR,OAAS+K,EAAUgC,WAAWE,YAGtCgO,EAAK,EAAGA,EAAK9Y,EAAQjF,OAAQ+d,IAKlC,IAAK,GAHD1Q,GAASpI,EAAQ8Y,GACjBC,EAAsB,MAAV3Q,EAAiBpO,EAAK6H,IAAInD,KAAO0J,EAAO3J,IAE/Cua,EAAK,EAAGA,EAAKD,EAAU9Z,OAAOlE,OAAQie,IAAM,CAEjD,GAGIZ,GAHAtZ,EAAWia,EAAU9Z,OAAO+Z,GAC5B9J,EAAS6J,EAAUha,WAAWD,EAI9BsZ,IADClJ,EAAO3G,QAAU2G,EAAOnR,MAAMmD,SAASiB,QACvB,GAAIyG,GAAU+B,OAAO9I,EAAIzB,KAAK1C,QAASkL,EAAUgC,WAAWE,UAAWoE,EAAQ9G,EAAQpO,EAAKqL,mBAE5F,IAGrB,IAAIsF,GAAS,GAAI/B,GAAU+B,OAAO9I,EAAIzB,KAAK1C,QAAS,KAAMwR,EAAQ9G,EAAQpO,EAAKqL,kBAAmB+S,EAClGC,GAAMnZ,KAAKyL,IAENuE,EAAO3G,QAAU2G,EAAOnR,MAAMmD,SAASiB,SACxCkW,EAAMnZ,KAAKkZ,IAzI3B,GAAIpe,GAAOsF,IAEXwY,GAAMhd,KAAKd,EAAM+d,GAEjBzY,KAAK6Y,aAAe,KAEpB7Y,KAAK2Z,MAAQ,WAGT,GAFAjf,EAAKoM,WAEW,MAAZpM,EAAK6H,IAAa,CAElB,GAAI7H,EAAK6H,IAAInD,KAAKO,OAAOlE,OAAS,GAAKf,EAAK6H,IAAI1G,MAAMoE,OAAO2E,WAAWxB,eAAgB,CACpF,IAAK,GAAI9D,GAAQ5E,EAAK6H,IAAInD,KAAKE,MAAOA,EAAQ,EAAGA,IAC7C5E,EAAKoM,QAAQlH,SACb2Z,EAAUja,EAAO5E,EAAKoM,QAGtBpM,GAAK6H,IAAI1G,MAAMoE,OAAO2E,WAAWxB,iBAEhC1I,EAAKoM,QAAQ,GAAKpM,EAAKoM,QAAQ,QAAUlH,KAAK,GAAI0J,GAAU+B,OAAO9I,EAAIzB,KAAK1C,QAASkL,EAAUgC,WAAWsO,YAAalf,EAAK6H,IAAInD,KAAM,KAAM1E,EAAKqL,oBAI9H,IAAxBrL,EAAKoM,QAAQrL,QACbf,EAAKoM,QAAQlH,MAAM,GAAI0J,GAAU+B,OAAO9I,EAAIzB,KAAK1C,QAASkL,EAAUgC,WAAWuO,MAAOnf,EAAK6H,IAAInD,KAAM,KAAM1E,EAAKqL,qBAIpH2S,MA6ER1Y,KAAK2Z,WAwCTlR,YAAa,EACbqR,eAAgB,GAChB9N,kBAAmB,KAEvB+N,IAAK,SAASpe,EAASvB,GA+DnB,QAAS4f,GAAS9W,GAEdlD,KAAKkC,QAAUgB,EAAQhB,QAEvBlC,KAAKzB,KAAO2E,EAAQ3E,KAEpByB,KAAKia,SAAW/W,EAAQ+W,SAExBja,KAAK+I,MAAQ7F,EAAQ6F,MAErB/I,KAAKoY,UAAW,EAEhBpY,KAAKka,SAAWhX,EAAQgX,SAExBla,KAAKyL,MAAQvI,EAAQuI,OAAS,WAC1B,MAAO,IAGXzL,KAAK0L,MAAQxI,EAAQwI,OAAS,WAC1B,MAAO,IAGX1L,KAAK6C,QAAUK,EAAQiX,WAAa,WAChC,OAAO,GAGXna,KAAK6U,IAAM7U,KAAKkC,QAAUlC,KAAKzB,KAAOyB,KAAK+I,MAC3C/I,KAAKoa,SAAW,WACZ,MAAOtF,GAAMpI,IAAI1M,KAAK6U,MAE1B7U,KAAKqa,SAAW,SAAShS,GACrByM,EAAMF,IAAI5U,KAAK6U,IAAKxM,IA5F5B,GAAI9F,GAAM5G,EAAQ,aACdmZ,EAAQ,IAAInZ,EAAQ,gBAEpB2P,EAAalR,EAAOD,QAAQmR,YAC5BgP,MAAO,EACP/O,YAAa,EACbgP,WAAY,EACZC,aAAc,EACdX,MAAO,EACPY,QAAS,EACTjP,UAAW,EACXoO,YAAa,EACbc,eAAgB,SAASC,EAAYzY,GACjC,GAAIgY,GAAWhY,IAAYK,EAAIzB,KAAKzC,KAAO,aAAgB6D,IAAYK,EAAIzB,KAAK1C,QAAU,aAAe,EACzG,QAAQuc,GACJ,IAAKrP,GAAWgP,MAChB,IAAKhP,GAAWkP,aACZN,EAAW,OACX,MACJ,KAAK5O,GAAWuO,MACZK,EAAW,UAAYA,CACvB,MACJ,KAAK5O,GAAWmP,QACZP,EAAW,UAAYA,CACvB,MACJ,KAAK5O,GAAWE,UACZ0O,EAAW,oBAAsBA,CACjC,MACJ,KAAK5O,GAAWsO,YACZM,EAAW,oBAAsBA,EAIzC,MAAOA,IAEXU,aAAc,SAASC,EAAeC,GAClC,GAAIZ,GAAW,EACf,QAAQW,GACJ,IAAKvP,GAAWsO,YACZM,EAAW,SACX,MACJ,KAAK5O,GAAWE,UAER0O,EADAY,IAAkBxP,EAAWsO,YAClB,UAEA,SAEf,MACJ,SAEQM,EADAY,IAAkBxP,EAAWsO,YAClB,UACJkB,IAAkBxP,EAAWE,UACzB,UAEA,GAGvB,MAAO0O,IAuCf9f,GAAOD,QAAQkR,OAAS,SAASnJ,EAASyY,EAAYxb,EAAK2J,EAAQiS,EAAiBjC,GAqEhF,QAASkC,KACL,GAAItgB,EAAK6D,OAAS+M,EAAWE,UAAW,CAEpC,IADA,GAAIyP,GAAUvgB,EAAKoO,OACD,MAAXmS,GAAiB,CACpB,GAAIA,EAAQnC,iBAAmBmC,EAAQnC,eAAeV,SAClD,OAAO,CAEX6C,GAAUA,EAAQnS,OAEtB,OAAO,EAGP,GAAIoS,GAAaxgB,EAAKyE,IAAI6J,QAAUtO,EAAKyE,IAAI8J,SAAWvO,EAAKyE,IAAIV,MAAMmD,SAASiB,SAAWnI,EAAKoe,eAAeV,QAC/G,KAAK8C,EACD,OAAO,CAIX,KADA,GAAIC,GAAMzgB,EAAKoO,OACD,MAAPqS,KAAiBA,EAAIhc,IAAIV,MAAMmD,SAASiB,SAAkC,MAAtBsY,EAAIrC,gBAA0BqC,EAAIrC,eAAeV,WACxG+C,EAAMA,EAAIrS,MAEd,OAAc,OAAPqS,GAAqC,MAAtBA,EAAIrC,eAAyBoC,EAAaC,EAAIrC,eAAeV,SAI3F,QAASgD,GAASC,GACd,GACIC,GADAC,EAAQ,EAERC,GAAS,CAEb,IAAIC,GAAaJ,GAAoB3gB,EAAKmI,UAAW,CACjD,GAAKnI,EAAKyE,IAAI8J,OAoBV,MAAO8R,EAlBP,IAAIrgB,EAAKghB,WAAWjgB,OAAS,EACzB,IAAK,GAAIL,GAAI,EAAGA,EAAIV,EAAKghB,WAAWjgB,OAAQL,IAAK,CAC7C,GAAIugB,GAAYjhB,EAAKghB,WAAWtgB,EAE3BugB,GAAUxc,IAAI8J,OAOfsS,GAASR,GANTO,EAAUG,EAAYE,EAAUjQ,QAAUiQ,EAAUlQ,QACpD8P,GAASD,EACC,IAANlgB,GAAwB,IAAZkgB,IACZE,GAAS,QAOrBD,IAASR,CAKjB,OAAOQ,IAASC,EAAS,EAAI,GAEjC,MAAOD,GA1HX,GAEI9P,GACAC,EACA3C,EAJArO,EAAOsF,KAMPyb,EAAYvZ,IAAYK,EAAIzB,KAAKzC,IAGrC,QAFAsc,EAAaA,IAA6B,IAAdxb,EAAIG,MAAcgM,EAAWuO,MAAQvO,EAAWmP,UAGxE,IAAKnP,GAAWsO,YACZ7Q,EAAQ,eACR0C,EAAQgQ,EAAYtc,EAAIG,MAAQ,GAAK,EAAIyb,EACzCrP,EAAQ+P,EAAYV,EAAkB5b,EAAIG,MAAQ,GAAK,CACvD,MACJ,KAAKgM,GAAWE,UACZzC,EAAQ5J,EAAI4J,MACZ0C,EAAQgQ,EAAYtc,EAAIG,MAAQyb,EAChCrP,EAAQ+P,EAAYV,EAAkB5b,EAAIG,KAC1C,MACJ,SACIyJ,EAAQ5J,EAAI4J,MACZ0C,EAAQgQ,EAAY,EAAI,KACxB/P,EAAQ+P,EAAY,KAAO,EAInCzb,KAAKzD,UAAY4C,EAAIV,MAErBub,EAASxe,KAAKwE,MACVkC,QAASA,EACT3D,KAAMoc,EACNV,SAAUwB,EAAY,2BAA6B,8BACnD1S,MAAOA,EACPmR,SAAU5O,EAAWoP,eAAeC,EAAYzY,GAChDuJ,MAAgB,MAATA,EAAgB,WACnB,MAAOA,IACP2P,EACJ1P,MAAgB,MAATA,EAAgB,WACnB,MAAOA,IACP0P,EACJjB,UAAWa,IAGfhb,KAAK8Y,eAAiBA,EACtB9Y,KAAK8I,OAASA,EACd9I,KAAK0b,cACL1b,KAAKb,IAAMA,EACXa,KAAKoY,SAAWpY,KAAKoa,WAAapa,KAAKoa,WAAWhC,SAAYuC,IAAerP,EAAWE,YAAcrM,EAAIV,MAAMmD,SAASmB,UAEzH/C,KAAKsY,OAAS,WACV5d,EAAK0d,UAAW,EAChBpY,KAAKqa,UACDjC,SAAU1d,EAAK0d,YAGvBpY,KAAKqY,SAAW,WACZ3d,EAAK0d,UAAW,EAChBpY,KAAKqa,UACDjC,SAAU1d,EAAK0d,YAIT,MAAVtP,GACAA,EAAO4S,WAAW9b,KAAKI,OA8D/B5F,EAAOD,QAAQmf,WAAa,SAAS/c,EAAWuM,GAE5CkR,EAASxe,KAAKwE,MACVkC,QAAS,KACT3D,KAAM+M,EAAWC,YACjB0O,SAAU,2BACVlR,MAAOxM,EACP2d,SAAU5O,EAAWoP,eAAe5R,EAAOvK,KAAMuK,EAAO5G,SACxDiY,UAAWrR,EAAOjG,UAGtB7C,KAAK8I,OAASA;EAGlB1O,EAAOD,QAAQ2R,SAAW,SAASjQ,EAAOse,EAAWyB,EAASC,GAE1D7b,KAAK8b,aAAeF,EAAQrd,OAAS+M,EAAWC,YAAcqQ,EAAQ9S,OAAO3J,IAAMyc,EAAQzc,IAC3Fa,KAAK+b,gBAAkBF,EAAQtd,OAAS+M,EAAWC,YAAcsQ,EAAQ/S,OAAO3J,IAAM0c,EAAQ1c,IAC9Fa,KAAKgc,QAAUJ,EAAQrd,OAAS+M,EAAWC,YAAcqQ,EAAQ9S,OAAOvK,KAAOqd,EAAQrd,KACvFyB,KAAKic,QAAUJ,EAAQtd,OAAS+M,EAAWC,YAAcsQ,EAAQ/S,OAAOvK,KAAOsd,EAAQtd,KAEvFyB,KAAKzD,UAAYV,EAAMoE,OAAO8F,gBAAkB,EACN,SAArClK,EAAMoE,OAAO0E,oBACViX,EAAQ7S,MACR8S,EAAQ9S,MACZlN,EAAMoE,OAAOG,WAAW,GAE5B4Z,EAASxe,KAAKwE,MACVkC,QAAS,KACT3D,KAAM+M,EAAWiP,WACjBN,SAAU,0BACVlR,MAAOlN,EAAMgV,QAAQ7Q,KAAKzD,UAAYyD,KAAKzD,UAAUoC,KAAO,KAAMqB,KAAK8b,aAAc9b,KAAK+b,iBAC1F7B,SAAU,QAAU5O,EAAWsP,aAAa5a,KAAKgc,QAAShc,KAAKic,SAC/D9B,UAAWA,KAInB/f,EAAOD,QAAQ+hB,WAAa,SAASzd,GAEjCub,EAASxe,KAAKwE,MACVkC,QAAS,KACT3D,KAAM+M,EAAWkP,aACjBP,SAAU,4BACVlR,MAAOtK,EACPyb,SAAU5O,EAAWoP,eAAepP,EAAWkP,iBAIvDpgB,EAAOD,QAAQgiB,UAAY,SAAS1Q,EAAOC,GAEvCsO,EAASxe,KAAKwE,MACVkC,QAAS,KACT3D,KAAM+M,EAAWgP,MACjBL,SAAU,sBACVlR,MAAO,KACPmR,SAAU5O,EAAWoP,eAAepP,EAAWgP,OAC/C7O,MAAO,WACH,MAAOA,IAEXC,MAAO,WACH,MAAOA,SAMnBjD,YAAa,EACb2T,cAAe,KAEnBC,IAAK,SAAS1gB,EAASvB,GAEnB,GAAImI,GAAM5G,EAAQ,aACdE,EAAQF,EAAQ,eAChB2N,EAAY3N,EAAQ,mBACpB2gB,EAAS3gB,EAAQ,iBACjB4gB,EAAS5gB,EAAQ,gBAIrBvB,GAAOD,QAAU,SAAS8F,GAwKtB,QAASuc,KA+BL,QAASC,GAAkBC,EAAYC,GACnC,MAAO,YACH,MAAOD,MAAgBC,KA9B/BjiB,EAAKkL,KAAO,GAAI0W,GAAO5hB,EAAKmB,MAAM+J,MAClClL,EAAKmL,QAAU,GAAI0W,GAAO7hB,EAAKmB,MAAMgK,QAErC,IAAI+W,GAAcliB,EAAKkL,KAAKkB,QACxB+V,EAAqBniB,EAAKmL,QAAQgT,YAGtCne,GAAKoQ,QACDG,YACIpG,OAAQnK,EAAKmB,MAAM+J,KAAKlH,OAAOjD,QAAU,IACM,SAA1Cf,EAAKmB,MAAMoE,OAAO0E,qBAAkCjK,EAAKmB,MAAMoE,OAAO8F,gBAAkB,EAAI,EAAI,GACrGjB,OAAQ8X,EAAYnhB,QAExByP,eACIrG,MAAOnK,EAAKmL,QAAQgT,aAAapd,OACjCqJ,QAASpK,EAAKmB,MAAMgK,QAAQnH,OAAOjD,QAAU,IACE,YAA1Cf,EAAKmB,MAAMoE,OAAO0E,qBAAqCjK,EAAKmB,MAAMoE,OAAO8F,gBAAkB,EAAI,EAAI,KAIhHrL,EAAKoQ,OAAOC,YACRlG,MAAOnK,EAAKoQ,OAAOG,WAAWpG,MAAQnK,EAAKoQ,OAAOI,cAAcrG,MAChEC,OAAQpK,EAAKoQ,OAAOG,WAAWnG,OAASpK,EAAKoQ,OAAOI,cAAcpG,OAGtE,IACIgY,GADAjR,IAQJ,IAAI+Q,EAAYnhB,OAAS,EACrB,IAAK,GAAImT,GAAK,EAAGA,EAAKgO,EAAYnhB,OAAQmT,IAAM,CAC5C,GAAImO,GAAgBH,EAAYhO,GAC5BoO,EAAgBD,EAAcA,EAActhB,OAAS,EAEzDqhB,KACA,KAAK,GAAIG,GAAiB,EAAGA,EAAiBJ,EAAmBphB,OAAQwhB,IAAkB,CACvF,GAAIC,GAAmBL,EAAmBI,GACtC9C,EAAYsC,EAAkBO,EAAcna,QAASqa,EAAiBra,QAC1Eia,GAAIG,GAAkB,GAAI3T,GAAUwC,SAASpR,EAAKmB,MAAOse,EAAW6C,EAAeE,GAEvFrR,EAASjM,KAAKkd,GAGtBpiB,EAAKmR,SAAWA,EAxNpB,GACIsR,GADAziB,EAAOsF,IAMXA,MAAKnE,MAAQ,GAAIA,GAAMoE,GAGvBD,KAAK4F,KAAO,KAEZ5F,KAAK6F,QAAU,KAGf7F,KAAK6L,YAEL7L,KAAK8K,QACDG,YAEIpG,MAAO,KAEPC,OAAQ,MAEZoG,eAEIrG,MAAO,KAEPC,OAAQ,MAEZiG,YAEIlG,MAAO,KAEPC,OAAQ,OAIhB9E,KAAKO,KAAO,SAAS2B,EAASzD,GAC1B,GAAIyD,IAAYK,EAAIzB,KAAKzC,KACrB3D,EAAKmB,MAAM+J,KAAKrF,KAAK9B,OAClB,CAAA,GAAIyD,IAAYK,EAAIzB,KAAK1C,QAG5B,MAFA1D,GAAKmB,MAAMgK,QAAQtF,KAAK9B,GAK5B+d,KAGJxc,KAAKkQ,YAAc,SAASpK,GACxBpL,EAAKmB,MAAMqU,YAAYpK,GACvB0W,KAIJxc,KAAKiQ,YAAc,SAAS3L,EAAW+H,EAAUC,EAAMC,EAAaC,GAChE9R,EAAKmB,MAAMoU,YAAY3L,EAAW+H,EAAUC,EAAMC,EAAaC,GAC/DgQ,KAGJxc,KAAKuH,UAAY,SAAS9I,EAAO2e,EAAYC,EAAY3V,GACrD,MAAIhN,GAAKmB,MAAM0L,UAAU9I,EAAO2e,EAAYC,EAAY3V,IACpD8U,KACO,IAEJ,GAGXxc,KAAKgY,qBAAuB,SAAS9V,EAASzD,EAAO4J,GACjD,MAAInG,KAAYK,EAAIzB,KAAKzC,KACd3D,EAAKkL,KAAKoS,qBAAqBvZ,EAAO4J,GACtCnG,IAAYK,EAAIzB,KAAK1C,QACrB1D,EAAKmL,QAAQmS,qBAAqBvZ,EAAO4J,IAE7C,GAGXrI,KAAKmI,gBAAkB,SAASjG,GAC5B,MAAIxH,GAAKmB,MAAMoE,OAAOkI,gBAAgBjG,IAClCsa,KACO,IAEJ,GAGXxc,KAAKiI,oBAAsB,SAAS/F,GAChC,MAAOxH,GAAKmB,MAAMoE,OAAOgI,oBAAoB/F,IAGjDlC,KAAKsI,iBAAmB,SAASpG,GAC7B,MAAIxH,GAAKmB,MAAMoE,OAAOqI,iBAAiBpG,IACnCsa,KACO,IAEJ,GAGXxc,KAAKuI,oBAAsB,SAASrG,GAChC,MAAOxH,GAAKmB,MAAMoE,OAAOsI,oBAAoBrG,IAGjDlC,KAAKsd,YAAc,aAInBtd,KAAKud,OAAS,SAASC,GACnBL,EAAgBK,GAWpBxd,KAAKyd,UAAY,aA+CjBjB,OAyDJ/T,YAAa,EACbxM,cAAe,EACfyhB,gBAAiB,GACjB1R,kBAAmB,GACnB2R,gBAAiB,KAErBC,IAAK,SAASjiB,EAASvB,GAEnB,GAAImI,GAAM5G,EAAQ,aACd6c,EAAQ7c,EAAQ,gBAChB2N,EAAY3N,EAAQ,kBAExBvB,GAAOD,QAAU,SAAS0jB,GA0CtB,QAASC,GAAe/E,EAAOjQ,GAC3B,GAAIpO,EAAKqd,oBAEL,IAAK,GADDgG,GAAiBhF,EAAMA,EAAMtd,OAAS,GACjC4d,EAAiB,EAAGA,EAAiB3e,EAAKqL,kBAAmBsT,IAClE0E,EAAene,KAAK,GAAI0J,GAAUgQ,WAAW5e,EAAK6H,IAAI1G,MAAMoE,OAAOG,WAAWiZ,GAAiBvQ,IAC3FuQ,EAAiB3e,EAAKqL,kBAAoB,GAC1CgT,EAAMnZ,KAAMme,MAO5B,QAASxE,GAAUR,EAAOiF,GACtB,GAAIA,EAAUre,OAAOlE,OAAS,EAM1B,IAAK,GAJDwiB,GAAgBlF,EAAMtd,OAAS,EAC/BsiB,EAAiBhF,EAAMkF,GACvBnV,EAASiV,EAAetiB,OAAS,EAAIsiB,EAAeA,EAAetiB,OAAS,GAAK,KAE5EyiB,EAAW,EAAGA,EAAWF,EAAUre,OAAOlE,OAAQyiB,IAAY,CACnE,GAGIC,GAHA3e,EAAWwe,EAAUre,OAAOue,GAC5BtO,EAASoO,EAAUve,WAAWD,EAI9B2e,IADCvO,EAAO3G,QAAU2G,EAAOnR,MAAMmD,SAASiB,QACvB,GAAIyG,GAAU+B,OAAO9I,EAAIzB,KAAKzC,KAAMiL,EAAUgC,WAAWE,UAAWoE,EAAQ9G,EAAQpO,EAAKqL,mBAEzF,IAGrB,IAAIqY,GAAY,GAAI9U,GAAU+B,OAAO9I,EAAIzB,KAAKzC,KAAM,KAAMuR,EAAQ9G,EAAQpO,EAAKqL,kBAAmBoY,EAE9FD,GAAW,GACXnF,EAAMnZ,KAAMme,MAGhBA,EAAene,KAAKwe,GAEfxO,EAAO3G,OAUR6U,EAAe/E,EAAOqF,IATtB7E,EAAUR,EAAOnJ,GACbA,EAAOnR,MAAMmD,SAASiB,UACtBkW,EAAMnZ,MAAMue,IAGZL,EAAe/E,EAAOoF,MArF1C,GAAIzjB,GAAOsF,IAEXwY,GAAMhd,KAAKd,EAAMmjB,GAEjB7d,KAAK2Z,MAAQ,WACT,GACI0E,GADAvX,IAGJ,IAAgB,MAAZpM,EAAK6H,IAAa,CAClB,IAAI7H,EAAK6H,IAAInD,KAAKO,OAAOlE,OAAS,GAAKf,EAAK6H,IAAI1G,MAAMoE,OAAO2E,WAAWzB,eACpE2D,EAAQlH,SAGR2Z,EAAUzS,EAASpM,EAAK6H,IAAInD,MAExB1E,EAAK6H,IAAI1G,MAAMoE,OAAO2E,WAAWzB,aAAa,CAC9C,GAAImb,GAAUxX,EAAQA,EAAQrL,OAAS,EACvC4iB,GAAmB,GAAI/U,GAAU+B,OAAO9I,EAAIzB,KAAKzC,KAAMiL,EAAUgC,WAAWsO,YAAalf,EAAK6H,IAAInD,KAAM,KAAM1E,EAAKqL,mBAC5F,IAAnBuY,EAAQ7iB,OACR6iB,EAAQ1e,KAAKye,GAEbvX,EAAQlH,MAAMye,IAKH,IAAnBvX,EAAQrL,QACRqL,EAAQlH,MAAMye,EAAmB,GAAI/U,GAAU+B,OAAO9I,EAAIzB,KAAKzC,KAAMiL,EAAUgC,WAAWuO,MAAOnf,EAAK6H,IAAInD,KAAM,KAAM1E,EAAKqL,qBAG3HsY,GAEAP,EAAehX,EAASuX,GAGhC3jB,EAAKoM,QAAUA,GAGnB9G,KAAK2Z,WA2DTlR,YAAa,EACbqR,eAAgB,GAChB9N,kBAAmB,KAEvBuS,IAAK,SAAS5iB,EAASvB,IACnB,SAAUK,GAENL,EAAOD,SAEHqkB,GAAI,SAASC,EAAY3V,GACrB,GAAI4V,GAAQD,EAAWE,MAAM,KACzBvjB,EAAI,CAER,KADA0N,EAASA,GAAUtO,OACZY,EAAIsjB,EAAMjjB,QACbqN,EAAO4V,EAAMtjB,IAAM0N,EAAO4V,EAAMtjB,QAChC0N,EAASA,EAAO4V,EAAMtjB,IACtBA,GAEJ,OAAO0N,IAGXjC,cAAe,SAAS3C,GACpB,GAAI4Y,KACJ,KAAK,GAAI8B,KAAQ1a,GACTA,EAAImP,eAAeuL,IACnB9B,EAAIld,KAAKgf,EAGjB,OAAO9B,IAGX/d,QAAS,SAASmF,GACd,MAAgD,mBAAzC2a,OAAOC,UAAUjb,SAASkb,MAAM7a,IAG3CqM,SAAU,SAASrM,GACf,MAAgD,oBAAzC2a,OAAOC,UAAUjb,SAASkb,MAAM7a,IAG3CsM,OAAQ,SAAStM,GACb,MAAgD,kBAAzC2a,OAAOC,UAAUjb,SAASkb,MAAM7a,IAG3CF,SAAU,SAASE,GACf,MAAgD,oBAAzC2a,OAAOC,UAAUjb,SAASkb,MAAM7a,IAG3C2I,SAAU,SAAS3I,GACf,MAAgD,oBAAzC2a,OAAOC,UAAUjb,SAASkb,MAAM7a,IAG3C8a,YAAa,SAASC,GAClB,MAAOA,GAAGC,QAAQ,yBAA0B,SAGhDC,YAAa,SAAShL,EAAOiL,GACzB,GAAIpf,KAAKjB,QAAQoV,IAAUiL,EACvB,IAAK,GAAIhkB,GAAI,EAAGA,EAAI+Y,EAAM1Y,OAAQL,IAAK,CACnC,GAAIikB,GAAOlL,EAAM/Y,EACjB,IAAIgkB,EAAUC,GACV,MAAOA,GAInB,MAAO3f,SAGX4f,cAAe,SAASpb,EAAKqb,GACzB,QAASC,GAAO3K,EAAK9L,GACjB,MAAOwW,IAAkBA,EAAela,QAAQwP,GAAO,GAAKnV,OAAYqJ,EAE5E,MAAO0W,MAAKC,UAAUxb,EAAKsb,EAAQ,KAM1C,SAASG,GAGN,QAASC,GAAsBC,GAC3B7f,KAAK6f,QAAUA,EAHnB,GAAIC,GAAQ,mEAKZF,GAAsBd,UAAY,GAAIzjB,OACtCukB,EAAsBd,UAAUngB,KAAO,wBAGvCghB,EAAOI,KAAOtlB,GAAUA,EAAOslB,KAAO,SAAS7V,GACvC,MAAOzP,GAAOslB,KAAK7V,IAEvB,SAAS8V,GAEL,IAEI,GAAIC,GAAOC,EAHXhW,EAAMiW,OAAOH,GAGQI,EAAM,EAAGza,EAAMma,EAAOO,EAAS,GAIpDnW,EAAIoW,OAAa,EAANF,KAAaza,EAAM,IAAKya,EAAM,GAEzCC,GAAU1a,EAAI2a,OAAO,GAAKL,GAAS,EAAIG,EAAM,EAAI,GACnD,CAEE,GADAF,EAAWhW,EAAIqW,WAAWH,GAAO,KAC7BF,EAAW,IACX,KAAM,IAAIN,GAAsB,2FAEpCK,GAAQA,GAAS,EAAIC,EAEzB,MAAOG,IAKfV,EAAOa,KAAO/lB,GAAUA,EAAO+lB,KAAO,SAAStW,GACvC,MAAOzP,GAAO+lB,KAAKtW,IAEvB,SAAS8V,GACL,GAAI9V,GAAMiW,OAAOH,GAAOd,QAAQ,MAAO,GACvC,IAAIhV,EAAIzO,OAAS,GAAK,EAClB,KAAM,IAAImkB,GAAsB,oEAEpC,KAEI,GAAYa,GAAIC,EAAZC,EAAK,EAAeP,EAAM,EAAGC,EAAS,GAEzCK,EAASxW,EAAIoW,OAAOF,MAEpBM,IAAWD,EAAKE,EAAK,EAAS,GAALF,EAAUC,EAASA,EAGzCC,IAAO,GAAKN,GAAUF,OAAOS,aAAa,IAAMH,IAAO,GAAKE,EAAK,IAAM,EAG3ED,EAASZ,EAAMza,QAAQqb,EAE3B,OAAOL,KAEjBjmB,EAAOD,WAEVqB,KAAKwE,KAAwB,mBAAXvF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,qBAE5H,IAAI","file":"orb.min.js","sourcesContent":["/**\n * orb v1.0.9, Pivot table javascript library.\n *\n * Copyright (c) 2014-2017 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.9\n * @link http://orbjs.net/\n * @license MIT\n */\n\n/* global module, require, define, window, document, global, React */\n/*jshint node: true, eqnull: true*/\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n            module.exports[\"export\"] = _dereq_('./orb.export.excel');\n\n        }, {\n            \"./orb.export.excel\": 6,\n            \"./orb.pgrid\": 8,\n            \"./orb.query\": 9,\n            \"./orb.ui.pgridwidget\": 15,\n            \"./orb.utils\": 17\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                'var': function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var Dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new Dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                //console.warn(field.sort, parents[i].values)\n                                if (typeof field.sort.customfunc == 'function') {\n                                    var ret = field.sort.customfunc.call(this, parents[i].values);\n                                    if (ret !== undefined) parents[i].values = ret;\n                                } else {\n                                    parents[i].values.sort();\n                                    if (field.sort.order === 'desc') {\n                                        parents[i].values.reverse();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new Dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 17\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var merged = {\n                    configs: [],\n                    sorts: [],\n                    subtotals: [],\n                    functions: []\n                };\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    merged.configs.push(nnconfig);\n                    merged.sorts.push(nnconfig.sort || {});\n                    merged.subtotals.push(nnconfig.subTotal || {});\n                    merged.functions.push({\n                        aggregateFuncName: nnconfig.aggregateFuncName,\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null)\n                    });\n                }\n\n                return merged;\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n                var fieldAxeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = rootconfig.rowSettings;\n                            fieldAxeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = rootconfig.columnSettings;\n                            fieldAxeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = rootconfig.dataSettings;\n                            fieldAxeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            fieldAxeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                    fieldAxeconfig = null;\n                }\n\n                var merged = mergefieldconfigs(fieldconfig, fieldAxeconfig, axeconfig, defaultfieldconfig, rootconfig);\n\n                return new Field({\n                    name: getpropertyvalue('name', merged.configs, ''),\n\n                    caption: getpropertyvalue('caption', merged.configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', merged.sorts, null),\n                        customfunc: getpropertyvalue('customfunc', merged.sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', merged.subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', merged.subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', merged.subtotals, false) && getpropertyvalue('collapsible', merged.subtotals, true)\n                    },\n\n                    aggregateFuncName: getpropertyvalue('aggregateFuncName', merged.functions, 'sum'),\n                    aggregateFunc: getpropertyvalue('aggregateFunc', merged.functions, aggregation.sum),\n                    formatFunc: getpropertyvalue('formatFunc', merged.functions, null)\n                }, false);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val != null ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFuncName = options.aggregateFuncName ||\n                    (options.aggregateFunc ?\n                        (utils.isString(options.aggregateFunc) ?\n                            options.aggregateFunc :\n                            'custom') :\n                        null);\n\n                this.aggregateFunc(options.aggregateFunc);\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.canMoveFields = config.canMoveFields !== undefined ? !!config.canMoveFields : true;\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.toolbar = config.toolbar;\n                this.theme = themeManager;\n\n                themeManager.current(config.theme);\n\n                this.rowSettings = new Field(config.rowSettings, false);\n                this.columnSettings = new Field(config.columnSettings, false);\n                this.dataSettings = new Field(config.dataSettings, false);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                var runtimeVisibility = {\n                    subtotals: {\n                        rows: self.rowSettings.subTotal.visible !== undefined ? self.rowSettings.subTotal.visible : true,\n                        columns: self.columnSettings.subTotal.visible !== undefined ? self.columnSettings.subTotal.visible : true\n                    }\n                };\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                };\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var fieldConfig;\n                    var defaultFieldConfig = getfield(self.allFields, fieldname);\n\n                    if (defaultFieldConfig) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                fieldConfig = self.getRowField(fieldname);\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                fieldConfig = self.getColumnField(fieldname);\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                fieldConfig = self.getDataField(fieldname);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            var newAxeSubtotalsState = self.areSubtotalsVisible(newaxetype);\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            var field = createfield(\n                                self,\n                                newaxetype,\n                                fieldConfig,\n                                defaultFieldConfig);\n\n                            if (!newAxeSubtotalsState && field.subTotal.visible !== false) {\n                                field.subTotal.visible = null;\n                            }\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n\n                this.toggleSubtotals = function(axetype) {\n\n                    var i;\n                    var axeFields;\n                    var newState = !self.areSubtotalsVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        runtimeVisibility.subtotals.rows = newState;\n                        axeFields = self.rowFields;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        runtimeVisibility.subtotals.columns = newState;\n                        axeFields = self.columnFields;\n                    } else {\n                        return false;\n                    }\n\n                    newState = newState === false ? null : true;\n                    for (i = 0; i < axeFields.length; i++) {\n                        if (axeFields[i].subTotal.visible !== false) {\n                            axeFields[i].subTotal.visible = newState;\n                        }\n                    }\n                    return true;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return runtimeVisibility.subtotals.rows;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return runtimeVisibility.subtotals.columns;\n                    } else {\n                        return null;\n                    }\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    var newState = !self.isGrandtotalVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        self.grandTotal.rowsvisible = newState;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.grandTotal.columnsvisible = newState;\n                    } else {\n                        return false;\n                    }\n                    return true;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.grandTotal.rowsvisible;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.grandTotal.columnsvisible;\n                    } else {\n                        return false;\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 7,\n            \"./orb.themes\": 11,\n            \"./orb.utils\": 17\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var themeManager = _dereq_('./orb.themes');\n\n            var uriHeader = 'data:application/vnd.ms-excel;base64,';\n            var docHeader = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">' +\n                '<head>' +\n                '<meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\">' +\n                '<!--[if gte mso 9]><xml>' +\n                ' <x:ExcelWorkbook>' +\n                '  <x:ExcelWorksheets>' +\n                '   <x:ExcelWorksheet>' +\n                '    <x:Name>###sheetname###</x:Name>' +\n                '    <x:WorksheetOptions>' +\n                '     <x:ProtectContents>False</x:ProtectContents>' +\n                '     <x:ProtectObjects>False</x:ProtectObjects>' +\n                '     <x:ProtectScenarios>False</x:ProtectScenarios>' +\n                '    </x:WorksheetOptions>' +\n                '   </x:ExcelWorksheet>' +\n                '  </x:ExcelWorksheets>' +\n                '  <x:ProtectStructure>False</x:ProtectStructure>' +\n                '  <x:ProtectWindows>False</x:ProtectWindows>' +\n                ' </x:ExcelWorkbook>' +\n                '</xml><![endif]-->' +\n                '</head>' +\n                '<body>';\n            var docFooter = '</body></html>';\n\n            module.exports = function(pgridwidget) {\n\n                var config = pgridwidget.pgrid.config;\n\n                var currTheme = themeManager.current();\n                currTheme = currTheme === 'bootstrap' ? 'white' : currTheme;\n                var override = currTheme === 'white';\n\n                var buttonTextColor = override ? 'black' : 'white';\n                var themeColor = themeManager.themes[currTheme];\n                var themeFadeout = themeManager.utils.fadeoutColor(themeColor, 0.1);\n\n                var buttonStyle = 'style=\"font-weight: bold; color: ' + buttonTextColor + '; background-color: ' + themeColor + ';\" bgcolor=\"' + themeColor + '\"';\n                var headerStyle = 'style=\"background-color: ' + themeFadeout + ';\" bgcolor=\"' + themeFadeout + '\"';\n\n                function createButtonCell(caption) {\n                    return '<td ' + buttonStyle + '><font color=\"' + buttonTextColor + '\">' + caption + '</font></td>';\n                }\n\n                function createButtons(buttons, cellsCountBefore, cellsCountAfter, prefix) {\n                    var i;\n                    var str = prefix || '<tr>';\n                    for (i = 0; i < cellsCountBefore; i++) {\n                        str += '<td></td>';\n                    }\n\n                    str += buttons.reduce(function(tr, field) {\n                        return (tr += createButtonCell(field.caption));\n                    }, '');\n\n                    for (i = 0; i < cellsCountAfter; i++) {\n                        str += '<td></td>';\n                    }\n                    return str + '</tr>';\n                }\n\n                var cellsHorizontalCount = Math.max(config.dataFields.length + 1, pgridwidget.layout.pivotTable.width);\n\n                var dataFields = createButtons(config.dataFields,\n                    0,\n                    cellsHorizontalCount - config.dataFields.length,\n                    '<tr><td><font color=\"#ccc\">Data</font></td>'\n                );\n\n                var sep = '<tr><td style=\"height: 22px;\" colspan=\"' + cellsHorizontalCount + '\"></td></tr>';\n\n                var columnFields = createButtons(config.columnFields,\n                    pgridwidget.layout.rowHeaders.width,\n                    cellsHorizontalCount - (pgridwidget.layout.rowHeaders.width + config.columnFields.length)\n                );\n\n                var columnHeaders = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.columns.headers.length; i++) {\n                        var currRow = pgridwidget.columns.headers[i];\n                        var rowStr = '<tr>';\n                        if (i < pgridwidget.columns.headers.length - 1) {\n                            for (j = 0; j < pgridwidget.layout.rowHeaders.width; j++) {\n                                rowStr += '<td></td>';\n                            }\n                        } else {\n                            rowStr += config.rowFields.reduce(function(tr, field) {\n                                return (tr += createButtonCell(field.caption));\n                            }, '');\n                        }\n\n                        rowStr += currRow.reduce(function(tr, header) {\n                            var value = header.type === uiheaders.HeaderType.DATA_HEADER ? header.value.caption : //header.value;\n                                ((header.datafield && header.datafield.formatFunc) ? header.datafield.formatFunc()(header.value) : header.value);\n                            header.type === uiheaders.HeaderType.SUB_TOTAL && (value += ' 小计');\n                            //console.log(value, header.type, header)\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                var rowHeadersAndDataCells = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.rows.headers.length; i++) {\n                        var currRow = pgridwidget.rows.headers[i];\n                        var rowStr = '<tr>';\n                        rowStr += currRow.reduce(function(tr, header) {\n                            var value = (header.datafield && header.datafield.formatFunc) ? header.datafield.formatFunc()(header.value) : header.value;\n                            header.type === uiheaders.HeaderType.SUB_TOTAL && (value += ' 小计');\n                            //console.log(value, header.value, header)\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + value + '</td>');\n                        }, '');\n                        var dataRow = pgridwidget.dataRows[i];\n                        rowStr += dataRow.reduce(function(tr, dataCell, index) {\n                            var formatFunc = config.dataFields[index = index % config.dataFields.length].formatFunc;\n                            var value = dataCell.value == null ? '' : formatFunc ? formatFunc()(dataCell.value) : dataCell.value;\n                            return (tr += '<td>' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                function toBase64(str) {\n                    return str;\n                    //return utils.btoa(unescape(encodeURIComponent(str)));\n                }\n\n                return uriHeader +\n                    toBase64(docHeader +\n                        '<table>' + dataFields + sep + columnFields + columnHeaders + rowHeadersAndDataCells + '</table>' +\n                        docFooter);\n            };\n        }, {\n            \"./orb.themes\": 11,\n            \"./orb.ui.header\": 14,\n            \"./orb.utils\": 17\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                };\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Matches',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 17\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val !== undefined) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                };\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                };\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n                    var value;\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            value = self.calcAggregation(\n                                rowdim.isRoot ? null : rowdim.getRowIndexes().slice(0),\n                                coldim.isRoot ? null : coldim.getRowIndexes().slice(0), [datafieldName],\n                                aggregateFunc)[datafieldName];\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                value = self.dataMatrix[rowdim.id][coldim.id][datafieldName];\n                            } else {\n                                value = null;\n                            }\n                        }\n                    }\n\n                    return value === undefined ? null : value;\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                };\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var emptyIntersection = intersection && intersection.length === 0;\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc();\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            // no data\n                            if (emptyIntersection) {\n                                res[datafield.field.name] = null;\n                            } else {\n                                res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                            }\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 7,\n            \"./orb.query\": 9,\n            \"./orb.utils\": 17\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                };\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 17\n        }],\n        10: [function(_dereq_, module, exports) {\n\n\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#5bc0de',\n                    green: '#3fb618',\n                    orange: '#df691a',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    black: '#000000',\n                    white: '#FFFFFF'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        scrollBar: isBootstrap() ? ' btn btn-default btn-xs' : ''\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                var utils = themeManager.utils = {\n                    hexToRgb: function(hex) {\n                        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                        return result ? {\n                            r: parseInt(result[1], 16),\n                            g: parseInt(result[2], 16),\n                            b: parseInt(result[3], 16)\n                        } : null;\n                    },\n                    rgbaToHex: function(rgba) {\n                        var matches = rgba.match(/rgba\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)/);\n                        if (matches) {\n                            var alpah = parseFloat(matches[4]);\n                            return '#' +\n                                utils.applyAlphaAndToHex(matches[1], alpah) +\n                                utils.applyAlphaAndToHex(matches[2], alpah) +\n                                utils.applyAlphaAndToHex(matches[3], alpah);\n                        }\n                        return null;\n                    },\n                    applyAlphaAndToHex: function(value, alpha) {\n                        return (Math.floor(alpha * parseInt(value) + (1 - alpha) * 255) + 256).toString(16).substr(1, 2);\n                    },\n                    fadeoutColor: function(color, alpha) {\n                        color = utils.hexToRgb(color);\n                        return '#' +\n                            utils.applyAlphaAndToHex(color.r, alpha) +\n                            utils.applyAlphaAndToHex(color.g, alpha) +\n                            utils.applyAlphaAndToHex(color.b, alpha);\n                    }\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(axeModel) {\n\n                var self = this;\n\n\n                this.axe = axeModel;\n\n\n                this.headers = [];\n\n                this.dataFieldsCount = function() {\n                    return (self.axe.pgrid.config.dataHeadersLocation === 'columns' && self.axe.type === axe.Type.COLUMNS) ||\n                        (self.axe.pgrid.config.dataHeadersLocation === 'rows' && self.axe.type === axe.Type.ROWS) ?\n                        self.axe.pgrid.config.dataFieldsCount :\n                        1;\n                };\n\n                this.isMultiDataFields = function() {\n                    return self.dataFieldsCount() > 1;\n                };\n\n                this.toggleFieldExpansion = function(field, newState) {\n                    var toToggle = [];\n                    var allExpanded = true;\n                    var hIndex;\n\n                    for (var i = 0; i < this.headers.length; i++) {\n                        for (hIndex = 0; hIndex < this.headers[i].length; hIndex++) {\n                            var header = this.headers[i][hIndex];\n                            if (header.type === uiheaders.HeaderType.SUB_TOTAL && (field == null || header.dim.field.name == field.name)) {\n                                toToggle.push(header);\n                                allExpanded = allExpanded && header.expanded;\n                            }\n                        }\n                    }\n\n                    if (newState !== undefined) {\n                        allExpanded = !newState;\n                    }\n\n                    if (toToggle.length > 0) {\n                        for (hIndex = 0; hIndex < toToggle.length; hIndex++) {\n                            if (allExpanded) {\n                                toToggle[hIndex].collapse();\n                            } else {\n                                toToggle[hIndex].expand();\n                            }\n                        }\n                        return true;\n                    }\n\n                    return false;\n                };\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 14\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, columnsAxe);\n\n                this.leafsHeaders = null;\n\n                this.build = function() {\n                    self.headers = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                                self.headers.push([]);\n                                getUiInfo(depth, self.headers);\n                            }\n\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                                // add grandtotal header\n                                (self.headers[0] = self.headers[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount()));\n                            }\n                        }\n\n                        if (self.headers.length === 0) {\n                            self.headers.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.headers.length > 0) {\n                        // last headers row\n                        var infos = self.headers[self.headers.length - 1];\n                        var header = infos[0];\n\n                        if (header) {\n                            var currparent,\n                                prevpar = header.parent;\n\n                            for (var i = 0; i < infos.length; i++) {\n                                header = infos[i];\n                                currparent = header.parent;\n                                // if current header parent is different than previous header parent,\n                                // add previous parent\n                                if (currparent != prevpar) {\n                                    pushsubtotal(prevpar);\n                                    if (currparent != null) {\n                                        // walk up parent hierarchy and add grand parents if different \n                                        // than current header grand parents\n                                        var grandpar = currparent.parent;\n                                        var prevgrandpar = prevpar ? prevpar.parent : null;\n                                        while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                            pushsubtotal(prevgrandpar);\n                                            grandpar = grandpar ? grandpar.parent : null;\n                                            prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                        }\n                                    }\n                                    // update previous parent variable\n                                    prevpar = currparent;\n                                }\n                                // push current header\n                                leafsHeaders.push(infos[i]);\n\n                                // if it's the last header, add all of its parents up to the top\n                                if (i === infos.length - 1) {\n                                    while (prevpar != null) {\n                                        pushsubtotal(prevpar);\n                                        prevpar = prevpar.parent;\n                                    }\n                                }\n                            }\n                            // grandtotal is visible for columns and if there is more than one dimension in this axe\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                                // push also grand total header\n                                leafsHeaders.push(self.headers[0][self.headers[0].length - 1]);\n                            }\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (self.isMultiDataFields()) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.headers.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, headers) {\n\n                    var infos = headers[headers.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        headers[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, self.dataFieldsCount(), subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'))();\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = '';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = '总计'; //'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                this.datafield = dim.field;\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan(ignoreVisibility) {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (isRowsAxe || ignoreVisibility || self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            if (self.subheaders.length > 0) {\n                                for (var i = 0; i < self.subheaders.length; i++) {\n                                    var subheader = self.subheaders[i];\n                                    // if its not an array\n                                    if (!subheader.dim.isLeaf) {\n                                        subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                        tspan += subSpan;\n                                        if (i === 0 && (subSpan === 0)) {\n                                            addone = true;\n                                        }\n                                    } else {\n                                        tspan += datafieldscount;\n                                    }\n                                }\n                            } else {\n                                tspan += datafieldscount;\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    }\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 10\n        }],\n        15: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            //var OrbReactComps = require('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                //var pivotComponent;\n                //var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.dataRows = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    //pivotComponent.setProps({});\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    if (self.pgrid.moveField(field, oldAxeType, newAxeType, position)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.toggleFieldExpansion = function(axetype, field, newState) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.rows.toggleFieldExpansion(field, newState);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.columns.toggleFieldExpansion(field, newState);\n                    }\n                    return false;\n                };\n\n                this.toggleSubtotals = function(axetype) {\n                    if (self.pgrid.config.toggleSubtotals(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    return self.pgrid.config.areSubtotalsVisible(axetype);\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    if (self.pgrid.config.toggleGrandtotal(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    return self.pgrid.config.isGrandtotalVisible(axetype);\n                };\n\n                this.changeTheme = function(newTheme) {\n                    //pivotComponent.changeTheme(newTheme);\n                };\n\n                this.render = function(element) {\n                    renderElement = element;\n                    //        if(renderElement) {\n                    //            var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                    //            var pivottable = pivotTableFactory({\n                    //                pgridwidget: self\n                    //            });\n                    //\n                    //            pivotComponent = React.render(pivottable, element);\n                    //        }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    //        if(dataCell) {\n                    //            var colIndexes = dataCell.columnDimension.getRowIndexes();\n                    //            var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                    //                return colIndexes.indexOf(index) >= 0;\n                    //            }).map(function(index) {\n                    //                return self.pgrid.filteredDataSource[index];\n                    //            });\n                    //\n                    //            var title;\n                    //            if(dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                    //                title = 'Grand total';\n                    //            } else {\n                    //                if(dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                    //                    title = dataCell.columnDimension.value + '/Grand total ';\n                    //                } else if(dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                    //                    title = dataCell.rowDimension.value + '/Grand total ';\n                    //                } else {\n                    //                    title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                    //                }\n                    //            }\n                    //\n                    ////            var pivotStyle = window.getComputedStyle( pivotComponent.getDOMNode(), null );\n                    ////\n                    ////            dialog.show({\n                    ////                title: title,\n                    ////                comp: {\n                    ////                    type: OrbReactComps.Grid,\n                    ////                    props: {                    \n                    ////                        headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                    ////                        data: data,\n                    ////                        theme: self.pgrid.config.theme\n                    ////                    }\n                    ////                },\n                    ////                theme: self.pgrid.config.theme,\n                    ////                style: {\n                    ////                    fontFamily: pivotStyle.getPropertyValue('font-family'),\n                    ////                    fontSize: pivotStyle.getPropertyValue('font-size')\n                    ////                }\n                    ////            });\n                    //        }\n                };\n\n                //this.excelExport = function() {\n                //    return OrbReactComps.Export.excelExport(this);\n                //};\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build row and column headers\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsHeaders = self.rows.headers;\n                    var columnsLeafHeaders = self.columns.leafsHeaders;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsHeaders.length\n                        },\n                        columnHeaders: {\n                            width: self.columns.leafsHeaders.length,\n                            height: (self.pgrid.columns.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var dataRows = [];\n                    var arr;\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n                    if (rowsHeaders.length > 0) {\n                        for (var ri = 0; ri < rowsHeaders.length; ri++) {\n                            var rowHeadersRow = rowsHeaders[ri];\n                            var rowLeafHeader = rowHeadersRow[rowHeadersRow.length - 1];\n\n                            arr = [];\n                            for (var colHeaderIndex = 0; colHeaderIndex < columnsLeafHeaders.length; colHeaderIndex++) {\n                                var columnLeafHeader = columnsLeafHeaders[colHeaderIndex];\n                                var isvisible = createVisibleFunc(rowLeafHeader.visible, columnLeafHeader.visible);\n                                arr[colHeaderIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rowLeafHeader, columnLeafHeader);\n                            }\n                            dataRows.push(arr);\n                        }\n                    }\n                    self.dataRows = dataRows;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 8,\n            \"./orb.ui.cols\": 13,\n            \"./orb.ui.header\": 14,\n            \"./orb.ui.rows\": 16\n        }],\n        16: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, rowsAxe);\n\n                this.build = function() {\n                    var headers = [];\n                    var grandtotalHeader;\n\n                    if (self.axe != null) {\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            headers.push([]);\n\n                            // Fill Rows layout infos\n                            getUiInfo(headers, self.axe.root);\n\n                            if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                                var lastrow = headers[headers.length - 1];\n                                grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount());\n                                if (lastrow.length === 0) {\n                                    lastrow.push(grandtotalHeader);\n                                } else {\n                                    headers.push([grandtotalHeader]);\n                                }\n                            }\n                        }\n\n                        if (headers.length === 0) {\n                            headers.push([grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        if (grandtotalHeader) {\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(headers, grandtotalHeader);\n                        }\n                    }\n                    self.headers = headers;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (self.isMultiDataFields()) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < self.dataFieldsCount() - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, self.dataFieldsCount(), subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        17: [function(_dereq_, module, exports) {\n            (function(global) {\n\n                module.exports = {\n\n                    ns: function(identifier, parent) {\n                        var parts = identifier.split('.');\n                        var i = 0;\n                        parent = parent || window;\n                        while (i < parts.length) {\n                            parent[parts[i]] = parent[parts[i]] || {};\n                            parent = parent[parts[i]];\n                            i++;\n                        }\n                        return parent;\n                    },\n\n                    ownProperties: function(obj) {\n                        var arr = [];\n                        for (var prop in obj) {\n                            if (obj.hasOwnProperty(prop)) {\n                                arr.push(prop);\n                            }\n                        }\n                        return arr;\n                    },\n\n                    isArray: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Array]';\n                    },\n\n                    isNumber: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Number]';\n                    },\n\n                    isDate: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Date]';\n                    },\n\n                    isString: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object String]';\n                    },\n\n                    isRegExp: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                    },\n\n                    escapeRegex: function(re) {\n                        return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                    },\n\n                    findInArray: function(array, predicate) {\n                        if (this.isArray(array) && predicate) {\n                            for (var i = 0; i < array.length; i++) {\n                                var item = array[i];\n                                if (predicate(item)) {\n                                    return item;\n                                }\n                            }\n                        }\n                        return undefined;\n                    },\n\n                    jsonStringify: function(obj, censorKeywords) {\n                        function censor(key, value) {\n                            return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                        }\n                        return JSON.stringify(obj, censor, 2);\n                    }\n                };\n\n                // from: https://github.com/davidchambers/Base64.js\n\n                (function(object) {\n                    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n                    function InvalidCharacterError(message) {\n                        this.message = message;\n                    }\n                    InvalidCharacterError.prototype = new Error();\n                    InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n                    // encoder\n                    // [https://gist.github.com/999166] by [https://github.com/nignag]\n                    object.btoa = global && global.btoa ? function(str) {\n                            return global.btoa(str);\n                        } :\n                        function(input) {\n                            var str = String(input);\n                            for (\n                                // initialize result and counter\n                                var block, charCode, idx = 0, map = chars, output = '';\n                                // if the next str index does not exist:\n                                // change the mapping table to \"=\"\n                                // check if d has no fractional digits\n                                str.charAt(idx | 0) || (map = '=', idx % 1);\n                                // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n                                output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n                            ) {\n                                charCode = str.charCodeAt(idx += 3 / 4);\n                                if (charCode > 0xFF) {\n                                    throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                                }\n                                block = block << 8 | charCode;\n                            }\n                            return output;\n                        };\n\n                    // decoder\n                    // [https://gist.github.com/1020396] by [https://github.com/atk]\n                    object.atob = global && global.atob ? function(str) {\n                            return global.atob(str);\n                        } :\n                        function(input) {\n                            var str = String(input).replace(/=+$/, '');\n                            if (str.length % 4 == 1) {\n                                throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n                            }\n                            for (\n                                // initialize result and counters\n                                var bc = 0, bs, buffer, idx = 0, output = '';\n                                // get next character\n                                (buffer = str.charAt(idx++));\n                                // character found in table? initialize bit storage and add its ascii value;\n                                ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                                    // and if not first of each 4 characters,\n                                    // convert the first 8 bits to one ascii character\n                                    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n                            ) {\n                                // try to find character in table (0-63, not found => -1)\n                                buffer = chars.indexOf(buffer);\n                            }\n                            return output;\n                        };\n                }(module.exports));\n\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}